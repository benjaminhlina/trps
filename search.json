[{"path":[]},{"path":"https://benjaminhlina.github.io/trps/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://benjaminhlina.github.io/trps/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"our-objectives","dir":"Articles","previous_headings":"","what":"Our Objectives","title":"Estimate trophic position - one source model","text":"purpose vignette learn estimate trophic position species using stable isotope data (δ13C\\delta^{13}C δ15N\\delta^{15}N). can estimate trophic position using one source model based equations Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"trophic-position-model","dir":"Articles","previous_headings":"","what":"Trophic Position Model","title":"Estimate trophic position - one source model","text":"one source model Post 2002 equation consists following: Trophic Position=λ+(δ15Nc−δ15Nb)ΔN \\text{Trophic Position} = \\lambda + \\frac{(\\delta^{15}N_c - \\delta^{15}N_b)}{\\Delta N} λ\\lambda trophic position baseline (e.g., 2), δ15Nc\\delta^{15}N_c δ15N\\delta^{15}N consumer, δ15Nb\\delta^{15}N_b mean δ15N\\delta^{15}N baseline, ΔN\\Delta N trophic enrichment factor (e.g., 3.4). use model Bayesian framework, need rearrange equation. function {trps} , one_source_model(), uses rearranged equation : δ15Nc=δ15Nb+ΔN×(Trophic Position−λ) \\delta^{15}N_c = \\delta^{15}N_b + \\Delta N \\times (\\text{Trophic Position} - \\lambda)","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"vignette-structure","dir":"Articles","previous_headings":"","what":"Vignette structure","title":"Estimate trophic position - one source model","text":"First need organize data prior running model. work use {dplyr} {tidyr} also use {data.table}. running model use {trps} {brms} iterative processes provided {purrr}. run model use {bayesplot} assess models extract posterior draws using {bayestestR} {tidybayes}. Posterior distributions plotted using {ggplot2} {ggdist} colours provided {viridis}.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load packages","title":"Estimate trophic position - one source model","text":"load packages needed carry analysis.","code":"{   library(bayesplot)   library(bayestestR)   library(brms)   library(dplyr)   library(ggplot2)   library(ggdist)   library(grid)   library(purrr)   library(tidybayes)   library(tidyr)   library(trps)   library(viridis)   }"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"assess-data","dir":"Articles","previous_headings":"","what":"Assess data","title":"Estimate trophic position - one source model","text":"{trps} several data sets, include stable isotope data (δ13C\\delta^{13}C δ15N\\delta^{15}N) consumer, lake trout (Salvelinus namaycush), benthic baseline, amphipods, pelagic baseline, dreissenids, ecoregion Lake Ontario.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"consumer-data","dir":"Articles","previous_headings":"Assess data","what":"Consumer data","title":"Estimate trophic position - one source model","text":"check data set first consumer. can see data set contains common name consumer (common_name), ecoregion samples collected (ecoregion), δ13C\\delta^{13}C (d13c) δ15N\\delta^{15}N (d15n).","code":"consumer_iso #> # A tibble: 30 × 4 #>    common_name ecoregion  d13c  d15n #>    <fct>       <fct>     <dbl> <dbl> #>  1 Lake Trout  Embayment -22.9  15.9 #>  2 Lake Trout  Embayment -22.5  16.2 #>  3 Lake Trout  Embayment -22.8  17.0 #>  4 Lake Trout  Embayment -22.3  16.6 #>  5 Lake Trout  Embayment -22.5  16.6 #>  6 Lake Trout  Embayment -22.3  16.6 #>  7 Lake Trout  Embayment -22.3  16.6 #>  8 Lake Trout  Embayment -22.5  16.2 #>  9 Lake Trout  Embayment -22.9  16.4 #> 10 Lake Trout  Embayment -22.3  16.3 #> # ℹ 20 more rows"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"baseline-data","dir":"Articles","previous_headings":"Assess data","what":"Baseline data","title":"Estimate trophic position - one source model","text":"Next vignette assess use benthic baseline data set. can see data set contains common name baseline (common_name), ecoregion samples collected (ecoregion), δ13C\\delta^{13}C (d13c_b1) δ15N\\delta^{15}N (d15n_b1).","code":"baseline_1_iso #> # A tibble: 14 × 5 #>       id common_name ecoregion d13c_b1 d15n_b1 #>    <int> <chr>       <fct>       <dbl>   <dbl> #>  1     1 Amphipoda   Embayment   -26.2    8.44 #>  2     2 Amphipoda   Embayment   -26.6    8.77 #>  3     3 Amphipoda   Embayment   -26.0    8.05 #>  4     4 Amphipoda   Embayment   -22.1   13.6  #>  5     5 Amphipoda   Embayment   -24.3    6.99 #>  6     6 Amphipoda   Embayment   -22.1    7.95 #>  7     7 Amphipoda   Embayment   -24.7    7.37 #>  8     8 Amphipoda   Embayment   -26.6    6.93 #>  9     9 Amphipoda   Embayment   -24.6    6.97 #> 10    10 Amphipoda   Embayment   -22.1    7.95 #> 11    11 Amphipoda   Embayment   -24.7    7.37 #> 12    12 Amphipoda   Embayment   -22.1    7.95 #> 13    13 Amphipoda   Embayment   -24.7    7.37 #> 14    14 Amphipoda   Embayment   -26.9   10.2"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"organizing-data","dir":"Articles","previous_headings":"","what":"Organizing data","title":"Estimate trophic position - one source model","text":"Now understand data need combine data sets estimate trophic position consumer. first need make id column data set assist joining together. first arrange() data ecoregion common_name. group_by() variables, add id grouping using row_number(). Always ungroup() data frame using group_by(). Lastly, use dplyr::select() rearrange order columns.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"consumer-data-1","dir":"Articles","previous_headings":"Organizing data","what":"Consumer data","title":"Estimate trophic position - one source model","text":"Let’s first add id consumer_iso data frame.","code":"consumer_iso <- consumer_iso %>%   arrange(ecoregion, common_name) %>%   group_by(ecoregion, common_name) %>%   mutate(   id = row_number()  ) %>%   ungroup() %>%   dplyr::select(id, common_name:d15n)"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"baseline-data-1","dir":"Articles","previous_headings":"Organizing data","what":"Baseline data","title":"Estimate trophic position - one source model","text":"Next let’s add id baseline_1_iso data frame. joining purposes going drop common_name data frame.","code":"baseline_1_iso <- baseline_1_iso %>%   arrange(ecoregion, common_name) %>%   group_by(ecoregion, common_name) %>%   mutate(   id = row_number()  ) %>%   ungroup() %>%   dplyr::select(id, ecoregion:d15n_b1)"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"joining-isotope-data","dir":"Articles","previous_headings":"Organizing data","what":"Joining isotope data","title":"Estimate trophic position - one source model","text":"Now consumer baseline data sets consistent structure can join \"id\" \"ecoregion\" using left_join() {dplyr}. can see successfully combined consumer baseline data. need one last thing prior analyzing data calculate mean δ13C\\delta^{13}C δ15N\\delta^{15}N baseline add constant λ\\lambda (l1) data frame. groub_by() two groups, using mutate() mean() calculate mean values. Important note, run model successfully columns need named d15n, n1, l1. now ready analyzed.","code":"combined_iso_os <- consumer_iso %>%   left_join(baseline_1_iso, by = c(\"id\", \"ecoregion\")) combined_iso_os <- combined_iso_os %>%    group_by(ecoregion, common_name) %>%    mutate(     c1 = mean(d13c_b1, na.rm = TRUE),     n1 = mean(d15n_b1, na.rm = TRUE),     l1 = 2   ) %>%    ungroup()  combined_iso_os #> # A tibble: 30 × 10 #>       id common_name ecoregion  d13c  d15n d13c_b1 d15n_b1    c1    n1    l1 #>    <int> <fct>       <fct>     <dbl> <dbl>   <dbl>   <dbl> <dbl> <dbl> <dbl> #>  1     1 Lake Trout  Embayment -22.9  15.9   -26.2    8.44 -24.6  8.28     2 #>  2     2 Lake Trout  Embayment -22.5  16.2   -26.6    8.77 -24.6  8.28     2 #>  3     3 Lake Trout  Embayment -22.8  17.0   -26.0    8.05 -24.6  8.28     2 #>  4     4 Lake Trout  Embayment -22.3  16.6   -22.1   13.6  -24.6  8.28     2 #>  5     5 Lake Trout  Embayment -22.5  16.6   -24.3    6.99 -24.6  8.28     2 #>  6     6 Lake Trout  Embayment -22.3  16.6   -22.1    7.95 -24.6  8.28     2 #>  7     7 Lake Trout  Embayment -22.3  16.6   -24.7    7.37 -24.6  8.28     2 #>  8     8 Lake Trout  Embayment -22.5  16.2   -26.6    6.93 -24.6  8.28     2 #>  9     9 Lake Trout  Embayment -22.9  16.4   -24.6    6.97 -24.6  8.28     2 #> 10    10 Lake Trout  Embayment -22.3  16.3   -22.1    7.95 -24.6  8.28     2 #> # ℹ 20 more rows"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"bayesian-analysis","dir":"Articles","previous_headings":"","what":"Bayesian Analysis","title":"Estimate trophic position - one source model","text":"can now estimate trophic position lake trout ecoregion Lake Ontario. things know running Bayesian analysis, suggest reading resources:","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"priors","dir":"Articles","previous_headings":"Bayesian Analysis","what":"Priors","title":"Estimate trophic position - one source model","text":"Bayesian analyses rely supplying uninformed informed prior distributions parameter (coefficient; predictor) model. default informed priors one source model following, ΔN\\Delta N assumes normal distribution (dn; μ=3.4\\mu = 3.4; σ=0.25\\sigma = 0.25), trophic position assumes uniform distribution (lower bound = 2 upper bound = 10), σ\\sigma assumes uniform distribution (lower bound = 0 upper bound = 10) informed priors desired δ15Nb\\delta^{15}N_b (n1; μ=9\\mu = 9; σ=1\\sigma = 1), can set argument bp TRUE one_source_ functions.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"model-convergence","dir":"Articles","previous_headings":"Bayesian Analysis","what":"Model convergence","title":"Estimate trophic position - one source model","text":"important things pay attention always run least 2 chains, model converge can try increase following: amount samples burned-(discarded; brm() can controlled argument warmup) number iterative samples retained (brm() can controlled argument iter). number samples drawn (brm() controled argument thin). Adjust adapt_delta value using control = list(adapt_delta = 0.95). assessing model want R-hat 1 within 0.05 1, indicates variance among within chains equal (See {rstan} docmentation R-hat), high value effective sample size (ESS), trace plots look “grassy” “catapiller like”, posterior distributions look relatively normal.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"estimating-trophic-position","dir":"Articles","previous_headings":"","what":"Estimating trophic position","title":"Estimate trophic position - one source model","text":"use functions {trps} drop {brms} model. functions one_source_model() provides brm() formula structure needed run one source model. Next brm() needs structure priors supplied prior argument using one_source_priors(). Lastly, values priors supplied stanvars argument using one_source_priors_params(). can adjust mean (μ\\mu), variance (σ\\sigma), upper lower bounds (lb ub) prior model using one_source_priors_params(), however, adjust priors good grasp Bayesian frameworks study system species.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"model","dir":"Articles","previous_headings":"Estimating trophic position","what":"Model","title":"Estimate trophic position - one source model","text":"Let’s run model!","code":"m <- brm(  formula = one_source_model(),  prior = one_source_priors(),  stanvars = one_source_priors_params(),  data = combined_iso_os,  family = gaussian(),  chains = 2,  iter = 4000,  warmup = 1000,  cores = 4,  seed = 4,  control = list(adapt_delta = 0.95) ) #> Compiling Stan program... #> Start sampling"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"model-output","dir":"Articles","previous_headings":"Estimating trophic position","what":"Model output","title":"Estimate trophic position - one source model","text":"Let’s view summary model. can see R-hat 1 meaning variance among within chains equal (See {rstan} docmentation R-hat) ESS quite large. Overall, means model converging fitting accordingly.","code":"m #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: d15n ~ n1 + dn * (tp - l1)  #>          dn ~ 1 #>          tp ~ 1 #>    Data: combined_iso_os (Number of observations: 30)  #>   Draws: 2 chains, each with iter = 4000; warmup = 1000; thin = 1; #>          total post-warmup draws = 6000 #>  #> Regression Coefficients: #>              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> dn_Intercept     3.37      0.25     2.89     3.86 1.00     1506     1878 #> tp_Intercept     4.54      0.20     4.21     4.96 1.00     1531     1891 #>  #> Further Distributional Parameters: #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     0.61      0.09     0.47     0.81 1.00     2145     1903 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"trace-plots","dir":"Articles","previous_headings":"Estimating trophic position","what":"Trace plots","title":"Estimate trophic position - one source model","text":"Let’s view trace plots posterior distributions model.  can see trace plots look “grassy” meaning model converging!","code":"plot(m)"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"posterior-draws","dir":"Articles","previous_headings":"","what":"Posterior draws","title":"Estimate trophic position - one source model","text":"Let’s look summary output model. can see ΔN\\Delta N estimated 3.37 l-95% CI 2.89, u-95% CI 3.86. move trophic position (tp) see trophic position estimated 4.54 l-95% CI 4.21, u-95% CI 4.96.","code":"m #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: d15n ~ n1 + dn * (tp - l1)  #>          dn ~ 1 #>          tp ~ 1 #>    Data: combined_iso_os (Number of observations: 30)  #>   Draws: 2 chains, each with iter = 4000; warmup = 1000; thin = 1; #>          total post-warmup draws = 6000 #>  #> Regression Coefficients: #>              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> dn_Intercept     3.37      0.25     2.89     3.86 1.00     1506     1878 #> tp_Intercept     4.54      0.20     4.21     4.96 1.00     1531     1891 #>  #> Further Distributional Parameters: #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     0.61      0.09     0.47     0.81 1.00     2145     1903 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"extract-posterior-draws","dir":"Articles","previous_headings":"Posterior draws","what":"Extract posterior draws","title":"Estimate trophic position - one source model","text":"use functions {tidybayes} work. First look names variables want extract using get_variables(). notice \"b_tp_Intercept\" name variable wanting extract. extract posterior draws using gather_draws(). going rename \"b_tp_Intercept\" tp. Let’s view post_draws can see consists seven variables, ecoregion, common_name, .chain, .iteration(number sampled burn-), .draw (number sampled iter; adjusted using thin), .variable (different variables dependig supplied gather_draws()), .value (estimated value).","code":"get_variables(m) #>  [1] \"b_dn_Intercept\" \"b_tp_Intercept\" \"sigma\"          \"lprior\"         #>  [5] \"lp__\"           \"accept_stat__\"  \"stepsize__\"     \"treedepth__\"    #>  [9] \"n_leapfrog__\"   \"divergent__\"    \"energy__\" post_draws <- m %>%   gather_draws(b_tp_Intercept) %>%   mutate(   ecoregion = \"Embayment\",   common_name = \"Lake Trout\",   .variable = \"tp\"  ) %>%   dplyr::select(common_name, ecoregion, .chain:.value) post_draws #> # A tibble: 6,000 × 7 #> # Groups:   .variable [1] #>    common_name ecoregion .chain .iteration .draw .variable .value #>    <chr>       <chr>      <int>      <int> <int> <chr>      <dbl> #>  1 Lake Trout  Embayment      1          1     1 tp          4.23 #>  2 Lake Trout  Embayment      1          2     2 tp          4.26 #>  3 Lake Trout  Embayment      1          3     3 tp          4.39 #>  4 Lake Trout  Embayment      1          4     4 tp          4.44 #>  5 Lake Trout  Embayment      1          5     5 tp          4.33 #>  6 Lake Trout  Embayment      1          6     6 tp          4.74 #>  7 Lake Trout  Embayment      1          7     7 tp          5.06 #>  8 Lake Trout  Embayment      1          8     8 tp          4.40 #>  9 Lake Trout  Embayment      1          9     9 tp          4.42 #> 10 Lake Trout  Embayment      1         10    10 tp          4.30 #> # ℹ 5,990 more rows"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"ploting-posterior-distributions","dir":"Articles","previous_headings":"","what":"Ploting posterior distributions","title":"Estimate trophic position - one source model","text":"Now posterior draws extracted can plot . comparing trophic position among species groups, like using either violin plots, interval points, slab plots posteriors. can access violins {ggplot2} later available {ggdist}.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"density-plot","dir":"Articles","previous_headings":"Ploting posterior distributions","what":"Density plot","title":"Estimate trophic position - one source model","text":"example first going plot density posterior draws using geom_density().","code":"ggplot(data = post_draws, aes(x = .value)) +   geom_density() +   theme_bw(base_size = 15) +  theme(   panel.grid = element_blank()  ) +   labs(   x = \"P(Trophic Position | X)\",    y = \"Density\"  )"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"point-interval","dir":"Articles","previous_headings":"Ploting posterior distributions","what":"Point interval","title":"Estimate trophic position - one source model","text":"Next point interval plot using stat_pointinterval().  Congratulations estimate trophic position Lake Trout! ’ll demonstrate run model iterative process produce estimates trophic position one group (e.g., comparing trophic position among species case different ecoergion).","code":"ggplot(data = post_draws, aes(y = .value,                 x = common_name)) +   stat_pointinterval() +   theme_bw(base_size = 15) +  theme(   panel.grid = element_blank()  ) +   labs(   x = \"P(Trophic Position | X)\",    y = \"Density\"  )"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"working-with-multiple-groups","dir":"Articles","previous_headings":"","what":"Working with multiple groups","title":"Estimate trophic position - one source model","text":"{trps} data set consumer baseline data already joined two ecoregions (combined_iso). Let’s look data frame.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"organize-data---multiple-groups","dir":"Articles","previous_headings":"Working with multiple groups","what":"Organize data - multiple groups","title":"Estimate trophic position - one source model","text":"can see data frame isotope data second baseline (dreissenids; d13c_b2 d15n_b2) well mean values baselines (c1-n2). columns useful estimating trophic position using two source model need analysis can removed. can also confirm data set one species, lake trout. collected two ecoregions Lake Ontario. Let’s remove columns don’t need, d13c_b2, d15n_b2, c1, c2, n2. also need add λ\\lambda data frame (l1). going make name column two groups common_name ecoregion pasted together. make iterative processes easier. example data now ready analyzed.","code":"combined_iso #> # A tibble: 117 × 13 #>       id common_name ecoregion  d13c  d15n d13c_b1 d15n_b1 d13c_b2 d15n_b2    c1 #>    <int> <fct>       <fct>     <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl> #>  1     1 Lake Trout  Anthropo… -22.3  17.6   -20.3    8.85   -26.4    7.72 -21.3 #>  2     2 Lake Trout  Anthropo… -23.0  17.7   -20.1    8.77   -24.4    8.69 -21.3 #>  3     3 Lake Trout  Anthropo… -21.2  16.7   -20.3    8.85   -24.8    7.99 -21.3 #>  4     4 Lake Trout  Anthropo… -20.9  18.7   -20.1    8.77   -24.4    8.69 -21.3 #>  5     5 Lake Trout  Anthropo… -20.7  18.0   -20.5    8.38   -24.8    7.99 -21.3 #>  6     6 Lake Trout  Anthropo… -20.7  18.0   -20.1    8.34   -24.4    8.05 -21.3 #>  7     7 Lake Trout  Anthropo… -22.8  17.8   -19.7    8.04   -24.1    8.79 -21.3 #>  8     8 Lake Trout  Anthropo… -22.4  17.9   -20.1    8.56   -24.6   10.7  -21.3 #>  9     9 Lake Trout  Anthropo… -20.9  18.4   -18.7    8.95   -24.3   10.6  -21.3 #> 10    10 Lake Trout  Anthropo… -21.7  17.7   -20.8    9.28   -24.6   10.7  -21.3 #> # ℹ 107 more rows #> # ℹ 3 more variables: n1 <dbl>, c2 <dbl>, n2 <dbl> unique(combined_iso$common_name) #> [1] Lake Trout #> Levels: Round Goby Alewife Lake Trout unique(combined_iso$ecoregion) #> [1] Anthropogenic Embayment     #> Levels: Anthropogenic Inlet Open-Coastal Deep-Hole Outlet Embayment combined_iso_update <- combined_iso %>%   dplyr::select(-c(d13c_b2, d15n_b2, c1, c2, n2)) %>%   mutate(   l1 = 2,    name = paste(ecoregion, common_name, sep = \"_\")  )  combined_iso_update #> # A tibble: 117 × 10 #>       id common_name ecoregion      d13c  d15n d13c_b1 d15n_b1    n1    l1 name  #>    <int> <fct>       <fct>         <dbl> <dbl>   <dbl>   <dbl> <dbl> <dbl> <chr> #>  1     1 Lake Trout  Anthropogenic -22.3  17.6   -20.3    8.85  8.14     2 Anth… #>  2     2 Lake Trout  Anthropogenic -23.0  17.7   -20.1    8.77  8.14     2 Anth… #>  3     3 Lake Trout  Anthropogenic -21.2  16.7   -20.3    8.85  8.14     2 Anth… #>  4     4 Lake Trout  Anthropogenic -20.9  18.7   -20.1    8.77  8.14     2 Anth… #>  5     5 Lake Trout  Anthropogenic -20.7  18.0   -20.5    8.38  8.14     2 Anth… #>  6     6 Lake Trout  Anthropogenic -20.7  18.0   -20.1    8.34  8.14     2 Anth… #>  7     7 Lake Trout  Anthropogenic -22.8  17.8   -19.7    8.04  8.14     2 Anth… #>  8     8 Lake Trout  Anthropogenic -22.4  17.9   -20.1    8.56  8.14     2 Anth… #>  9     9 Lake Trout  Anthropogenic -20.9  18.4   -18.7    8.95  8.14     2 Anth… #> 10    10 Lake Trout  Anthropogenic -21.7  17.7   -20.8    9.28  8.14     2 Anth… #> # ℹ 107 more rows"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"estimate-trophic-position---multiple-groups","dir":"Articles","previous_headings":"","what":"Estimate trophic position - multiple groups","title":"Estimate trophic position - one source model","text":"use similar structure model trophic position, however, first split() data list groups use map() {purrr} run model group. notice brm() call exactly ran model one group. difference using map(), data argument brm() needs replaced .x tell brm() get data.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"model---multiple-groups","dir":"Articles","previous_headings":"Estimate trophic position - multiple groups","what":"Model - multiple groups","title":"Estimate trophic position - one source model","text":"Let’s run model!","code":"m1 <- combined_iso_update %>%   split(.$name) %>%   map( ~ brm(   formula = one_source_model(),   prior = one_source_priors(),   stanvars = one_source_priors_params(),   data = .x,   family = gaussian(),   chains = 2,   iter = 4000,   warmup = 1000,   cores = 4,   seed = 4,   control = list(adapt_delta = 0.95)  ),   .progress = TRUE  ) #> Compiling Stan program... #> Start sampling #>  ■■■■■■■■■■■■■■■■                  50% |  ETA:  1m #> Compiling Stan program... #> Start sampling"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"model-output---multiple-groups","dir":"Articles","previous_headings":"Estimate trophic position - multiple groups","what":"Model output - multiple groups","title":"Estimate trophic position - one source model","text":"Let’s look summary models. can see R-hat 1 meaning variance among within chains equal (See {rstan} docmentation R-hat) ESS quite large groups. Overall, means models converging fitting accordingly.","code":"m1 #> $`Anthropogenic_Lake Trout` #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: d15n ~ n1 + dn * (tp - l1)  #>          dn ~ 1 #>          tp ~ 1 #>    Data: .x (Number of observations: 87)  #>   Draws: 2 chains, each with iter = 4000; warmup = 1000; thin = 1; #>          total post-warmup draws = 6000 #>  #> Regression Coefficients: #>              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> dn_Intercept     3.38      0.26     2.88     3.87 1.00     1645     1794 #> tp_Intercept     4.82      0.22     4.44     5.29 1.00     1644     1818 #>  #> Further Distributional Parameters: #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     0.48      0.04     0.42     0.57 1.00     2124     2125 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1). #>  #> $`Embayment_Lake Trout` #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: d15n ~ n1 + dn * (tp - l1)  #>          dn ~ 1 #>          tp ~ 1 #>    Data: .x (Number of observations: 30)  #>   Draws: 2 chains, each with iter = 4000; warmup = 1000; thin = 1; #>          total post-warmup draws = 6000 #>  #> Regression Coefficients: #>              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> dn_Intercept     3.37      0.25     2.89     3.86 1.00     1506     1878 #> tp_Intercept     4.54      0.20     4.21     4.96 1.00     1531     1891 #>  #> Further Distributional Parameters: #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     0.61      0.09     0.47     0.81 1.00     2145     1903 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"trace-plots---multiple-groups","dir":"Articles","previous_headings":"Estimate trophic position - multiple groups","what":"Trace plots - multiple groups","title":"Estimate trophic position - one source model","text":"Let’s look trace plots distributions. use iwalk() instead map() iwalk() invisibly return .x handy want call function (e.g., plot()) side effects rather returned value. also added grid.text() {grid} add group names plot.  can see trace plots look “grassy” meaning model converging!","code":"m1 %>%   iwalk(~ {   plot(.x)    grid.text(.y, x = 0.5, y = 0.98)  })"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"posterior-draws---multiple-groups","dir":"Articles","previous_headings":"","what":"Posterior draws - multiple groups","title":"Estimate trophic position - one source model","text":"Let’s look summary output model. can see lake trout Anthropogenic ecoregion ΔN\\Delta N estimated 3.89 l-95% CI 2.91, u-95% CI 3.86. move trophic position (tp) see trophic position estimated 4.48 l-95% CI 4.43, u-95% CI 5.39. can see lake trout Embayment ecoregion ΔN\\Delta N estimated 3.38 l-95% CI 2.90, u-95% CI 3.87. move trophic position (tp) see trophic position estimated 4.41 l-95% CI 3.97, u-95% CI 4.92.","code":"m1 #> $`Anthropogenic_Lake Trout` #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: d15n ~ n1 + dn * (tp - l1)  #>          dn ~ 1 #>          tp ~ 1 #>    Data: .x (Number of observations: 87)  #>   Draws: 2 chains, each with iter = 4000; warmup = 1000; thin = 1; #>          total post-warmup draws = 6000 #>  #> Regression Coefficients: #>              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> dn_Intercept     3.38      0.26     2.88     3.87 1.00     1645     1794 #> tp_Intercept     4.82      0.22     4.44     5.29 1.00     1644     1818 #>  #> Further Distributional Parameters: #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     0.48      0.04     0.42     0.57 1.00     2124     2125 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1). #>  #> $`Embayment_Lake Trout` #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: d15n ~ n1 + dn * (tp - l1)  #>          dn ~ 1 #>          tp ~ 1 #>    Data: .x (Number of observations: 30)  #>   Draws: 2 chains, each with iter = 4000; warmup = 1000; thin = 1; #>          total post-warmup draws = 6000 #>  #> Regression Coefficients: #>              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> dn_Intercept     3.37      0.25     2.89     3.86 1.00     1506     1878 #> tp_Intercept     4.54      0.20     4.21     4.96 1.00     1531     1891 #>  #> Further Distributional Parameters: #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     0.61      0.09     0.47     0.81 1.00     2145     1903 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"extract-posterior-draws---multiple-groups","dir":"Articles","previous_headings":"Posterior draws - multiple groups","what":"Extract posterior draws - multiple groups","title":"Estimate trophic position - one source model","text":"use functions {tidybayes} work. First look names variables want extract using get_variables(). Considering multiple models m1, need use map() iterate m1 get variables. notice \"b_tp_Intercept\" name variable model object interested extracting. gather posterior draws using gather_draws(). going rename \"b_tp_Intercept\" tp. , considering multiple models m1 need use map() iterate m1 get posterior draws. iterated m1 extract draws can combine results using bind_rows() {dplyr}. variable name name ecoregion common name species, however, pasted together _. need separate string two variables want ecoregion common_name. can using separate_wider_delim() {tidyr}. using function separate columns keep characters, hence last step convert ecoregion factor. Let’s view post_draws_mg can see consists seven variables, ecoregion, common_name, .chain, .itteration, .draw, .variable (different variables interest supply gather_draws() one variable), .value (estimated value). Note - first two columns vary depending names split data .","code":"m1 %>%   map(~ get_variables(.x)) #> $`Anthropogenic_Lake Trout` #>  [1] \"b_dn_Intercept\" \"b_tp_Intercept\" \"sigma\"          \"lprior\"         #>  [5] \"lp__\"           \"accept_stat__\"  \"stepsize__\"     \"treedepth__\"    #>  [9] \"n_leapfrog__\"   \"divergent__\"    \"energy__\"       #>  #> $`Embayment_Lake Trout` #>  [1] \"b_dn_Intercept\" \"b_tp_Intercept\" \"sigma\"          \"lprior\"         #>  [5] \"lp__\"           \"accept_stat__\"  \"stepsize__\"     \"treedepth__\"    #>  [9] \"n_leapfrog__\"   \"divergent__\"    \"energy__\" post_draws_mg <- m1 %>%  map(~ .x %>%      gather_draws(b_tp_Intercept) %>%      mutate(      .variable = \"tp\"     )  ) %>%   bind_rows(.id = \"name\") %>%   separate_wider_delim(name, names = c(\"ecoregion\", \"common_name\"),              delim = \"_\") %>%   mutate(   ecoregion = factor(ecoregion,              levels = c(\"Anthropogenic\", \"Embayment\")),   ) post_draws_mg #> # A tibble: 12,000 × 7 #> # Groups:   .variable [1] #>    ecoregion     common_name .chain .iteration .draw .variable .value #>    <fct>         <chr>        <int>      <int> <int> <chr>      <dbl> #>  1 Anthropogenic Lake Trout       1          1     1 tp          4.49 #>  2 Anthropogenic Lake Trout       1          2     2 tp          4.90 #>  3 Anthropogenic Lake Trout       1          3     3 tp          4.74 #>  4 Anthropogenic Lake Trout       1          4     4 tp          4.87 #>  5 Anthropogenic Lake Trout       1          5     5 tp          4.86 #>  6 Anthropogenic Lake Trout       1          6     6 tp          5.17 #>  7 Anthropogenic Lake Trout       1          7     7 tp          5.16 #>  8 Anthropogenic Lake Trout       1          8     8 tp          5.11 #>  9 Anthropogenic Lake Trout       1          9     9 tp          4.94 #> 10 Anthropogenic Lake Trout       1         10    10 tp          4.95 #> # ℹ 11,990 more rows"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"ploting-posterior-distributions---multiple-groups","dir":"Articles","previous_headings":"","what":"Ploting posterior distributions - multiple groups","title":"Estimate trophic position - one source model","text":"Now posterior draws extracted can plot . comparing trophic position among species groups, like using either violin plots, interval points, slab plots posteriors. can access violins {ggplot2} later available {ggdist}.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"violin-plot","dir":"Articles","previous_headings":"Ploting posterior distributions - multiple groups","what":"Violin plot","title":"Estimate trophic position - one source model","text":"Let’s first look violin plot.","code":"ggplot(data = post_draws_mg, aes(x = common_name,                   y = .value,                   fill = ecoregion)) +   geom_violin() +   stat_summary(fun = median, geom = \"point\",          size = 3,          position = position_dodge(0.9)  ) +   scale_fill_viridis_d(name = \"Ecoregion\",              option = \"G\",              begin = 0.35,              end = 0.75, alpha = 0.65) +   theme_bw(base_size = 15) +   theme(   panel.grid = element_blank(),   legend.position = \"inside\",    legend.position.inside = c(0.85, 0.86)  ) +  labs(   x = \"Species\",    y = \"P(Trophic Position | X)\"  )"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"point-interval-plot","dir":"Articles","previous_headings":"Ploting posterior distributions - multiple groups","what":"Point interval plot","title":"Estimate trophic position - one source model","text":"Lastly, let’s look point interval plot first need create colour palette. Now let’s plot point intervals.  Congratulations successfully run Bayesian one source trophic position model one species two ecoregions Lake Ontario!","code":"viridis_colours <- viridis(2,                            option = \"G\",                            begin = 0.35,                             end = 0.75,                             alpha = 0.65) ggplot(data = post_draws_mg, aes(x = common_name,                                   y = .value,                                   group = ecoregion)) +    stat_pointinterval(     aes(point_fill = ecoregion),     point_size = 4,     interval_colour = \"grey60\",     position = position_dodge(0.4),     shape = 21,   ) +    scale_fill_manual(aesthetics = \"point_fill\",                     values = viridis_colours,                     name = \"Ecoregion\") +   theme_bw(base_size = 15) +    theme(     panel.grid = element_blank(),     legend.position = \"inside\",      legend.position.inside = c(0.85, 0.86)   ) +   labs(     x = \"Species\",      y = \"P(Trophic Position | X)\"   )"},{"path":"https://benjaminhlina.github.io/trps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin L. Hlina. Author, maintainer.","code":""},{"path":"https://benjaminhlina.github.io/trps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Post DM (2002). “Using stable isotopes estimate trophic position: Models, methods, assumptions.” Ecology, 83(3), 703-718. doi:10.1890/0012-9658(2002)083[0703:USITET]2.0.CO;2, https://esajournals.onlinelibrary.wiley.com/doi/full/10.1890/0012-9658%282002%29083%5B0703%3AUSITET%5D2.0.CO%3B2. Heuvel C, Zhao Y, Fisk (2025). “Food web structure across basins Lake Erie, large freshwater ecosystem.” Canadian Journal Fisheries Aquatic Sciences, 82, 1-16. doi:10.1139/cjfas-2024-0028, https://cdnsciencepub.com/doi/10.1139/cjfas-2024-0028. Hlina BL (2025). trps: Bayesian trophic position models using stan. R package version 0.1.0, https://benjaminhlina.github.io/trps/.","code":"@Article{,   title = {Using stable isotopes to estimate trophic position: Models, methods, and assumptions},   author = {David M. Post},   journal = {Ecology},   year = {2002},   volume = {83},   number = {3},   pages = {703-718},   doi = {10.1890/0012-9658(2002)083[0703:USITET]2.0.CO;2},   url = {https://esajournals.onlinelibrary.wiley.com/doi/full/10.1890/0012-9658%282002%29083%5B0703%3AUSITET%5D2.0.CO%3B2}, } @Article{,   title = {Food web structure across basins in Lake Erie, a large freshwater ecosystem},   author = {C.E. Heuvel and Y.-M. Zhao and A.T. Fisk},   journal = {Canadian Journal of Fisheries and Aquatic Sciences},   year = {2025},   volume = {82},   pages = {1-16},   doi = {10.1139/cjfas-2024-0028},   url = {https://cdnsciencepub.com/doi/10.1139/cjfas-2024-0028}, } @Manual{,   title = {trps: Bayesian trophic position models using stan},   author = {Benjamin L. Hlina},   year = {2025},   note = {R package version 0.1.0},   url = {https://benjaminhlina.github.io/trps/}, }"},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"trps-","dir":"","previous_headings":"","what":"Bayesian trophic position models using stan","title":"Bayesian trophic position models using stan","text":"Bayesian trophic position models using stan (pronounced trips) leveraging {brms}. Equations trophic position models derived Post 2002 Heuvel et al. 2024 used stable isotope data different species.","code":""},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"trophic-models-in-trps","dir":"","previous_headings":"","what":"Trophic Models in {trps}","title":"Bayesian trophic position models using stan","text":"Currently {trps} supports following models: One Source Model - one_source_model() Two Source Model - two_source_model() Two Source Model - α\\alpha corrected (αr\\alpha_r) using Heuvel et al. 2024 - two_source_model_ar() None models currently implement carbon mixing fractionation models, point.","code":""},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"progress","dir":"","previous_headings":"","what":"Progress","title":"Bayesian trophic position models using stan","text":"view current overall progress package please see news priors one-source model parameters priors one-source model priors two-source model without different lambda parameters priors two-source model without different lambda priors two-source model w/ different lambda (priors two-source) parameters priors two-source model w/ different lambda (priors two-source) [] priors parameters priors priors [] parameters priors vignettes one source [] vignettes two source [] vignettes twp source ac","code":""},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian trophic position models using stan","text":"can install R-Universe version {trps} using following: can install development version {trps} using following:","code":"install.packages(\"trps\",                    repos = c(\"https://benjaminhlina.r-universe.dev\",                             \"https://cloud.r-project.org\")) devtools::install_github(\"benjaminhlina/trps\")"},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Bayesian trophic position models using stan","text":"highly suggest going vignettes walk use create trophic position model using {trps} {brms}. can also use following see vignettes: vignettes currently available online articles section website. See following links, Estimate trophic position - one source.","code":"vignette(\"Estimate_trophic_position_one_source_model\") browseVignettes(\"trps\")"},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"Bayesian trophic position models using stan","text":"cite package please cite following publications Post, D.M. 2002. Using Stable Isotopes Estimate Trophic Position: Models, Methods, Assumptions. Ecology 83(3): 703-718. doi: 10.2307/3071875. Heuvel, C., Zhao, Y., Fisk, .T. 2025. Food web structure across basins Lake Erie, large freshwater ecosystem. Canadian Journal Fisheries Aquatic Sciences 82:1-16. doi: 10.1139/cjfas-2024-0028. Hlina B.L. 2025. trps: Bayesian trophic position models using stan. R package version 0.1.0. https://benjaminhlina.github.io/trps/","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and add \\(\\alpha\\) — add_alpha","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"Calculate \\(\\alpha\\) two source trophic position model using equations Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"","code":"add_alpha(data, abs = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"data data.frame stable isotope samples mean values two baselines. aquatic ecosystems, baseline one needs come benthic source baseline two needs come pelagic source. Baseline \\(\\delta^{13}\\)C columns need named c1 c2, consumer's \\(\\delta^{13}\\)C column named d13c. abs logical controls whether absolute value taken numerator denominator. Default FALSE meaning absolute value taken.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"data.frame alpha, min_alpha, max_alpha added.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"$$\\alpha = (\\delta^{13}C_c - \\delta ^{13}C_2) / (\\delta ^{13}C_1 - \\delta ^{13}C_2)$$ \\(\\delta^{13}C_c\\) isotopic value consumer, \\(\\delta^{13}C_1\\) mean isotopic value baseline 1 \\(\\delta^{13}C_2\\) mean isotopic value baseline 2.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"","code":"combined_iso |>   add_alpha() #> # A tibble: 117 × 16 #>       id common_name ecoregion  d13c  d15n d13c_b1 d15n_b1 d13c_b2 d15n_b2    c1 #>    <int> <fct>       <fct>     <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl> #>  1     1 Lake Trout  Anthropo… -22.3  17.6   -20.3    8.85   -26.4    7.72 -21.3 #>  2     2 Lake Trout  Anthropo… -23.0  17.7   -20.1    8.77   -24.4    8.69 -21.3 #>  3     3 Lake Trout  Anthropo… -21.2  16.7   -20.3    8.85   -24.8    7.99 -21.3 #>  4     4 Lake Trout  Anthropo… -20.9  18.7   -20.1    8.77   -24.4    8.69 -21.3 #>  5     5 Lake Trout  Anthropo… -20.7  18.0   -20.5    8.38   -24.8    7.99 -21.3 #>  6     6 Lake Trout  Anthropo… -20.7  18.0   -20.1    8.34   -24.4    8.05 -21.3 #>  7     7 Lake Trout  Anthropo… -22.8  17.8   -19.7    8.04   -24.1    8.79 -21.3 #>  8     8 Lake Trout  Anthropo… -22.4  17.9   -20.1    8.56   -24.6   10.7  -21.3 #>  9     9 Lake Trout  Anthropo… -20.9  18.4   -18.7    8.95   -24.3   10.6  -21.3 #> 10    10 Lake Trout  Anthropo… -21.7  17.7   -20.8    9.28   -24.6   10.7  -21.3 #> # ℹ 107 more rows #> # ℹ 6 more variables: n1 <dbl>, c2 <dbl>, n2 <dbl>, alpha <dbl>, #> #   min_alpha <dbl>, max_alpha <dbl>"},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_1_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable isotope data for amphipods (baseline 1) — baseline_1_iso","title":"Stable isotope data for amphipods (baseline 1) — baseline_1_iso","text":"Stable isotope data (\\(\\delta^{13}\\)C \\(\\delta^{15}\\)N) amphipods collected ecoregion Lake Ontario.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_1_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable isotope data for amphipods (baseline 1) — baseline_1_iso","text":"","code":"baseline_1_iso"},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_1_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stable isotope data for amphipods (baseline 1) — baseline_1_iso","text":"data.frame containing 14 rows 5 variables common_name name spcies (.e., Amphipoda) ecoregion ecoregion samples collected d13c_b1 observed values \\(\\delta^{13}\\)C d15n_b1 observed values \\(\\delta^{15}\\)N","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_2_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable isotope data for dreissenids (baseline 2) — baseline_2_iso","title":"Stable isotope data for dreissenids (baseline 2) — baseline_2_iso","text":"Stable isotope data (\\(\\delta^{13}\\)C \\(\\delta^{15}\\)N) dreissenid collected ecoregion Lake Ontario.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_2_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable isotope data for dreissenids (baseline 2) — baseline_2_iso","text":"","code":"baseline_2_iso"},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_2_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stable isotope data for dreissenids (baseline 2) — baseline_2_iso","text":"data.frame containing 12 rows 5 variables common_name name spcies (.e., Dreissenids) ecoregion ecoregion samples collected d13c_b2 observed values \\(\\delta^{13}\\)C d15n_b2 observed values \\(\\delta^{15}\\)N","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/combined_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable isotope data for lake trout, amphipods (benthic baseline; baseline 1) and dreissenids (pelagic baseline; baseline 2), — combined_iso","title":"Stable isotope data for lake trout, amphipods (benthic baseline; baseline 1) and dreissenids (pelagic baseline; baseline 2), — combined_iso","text":"Stable isotope data (\\(\\delta^{13}\\)C \\(\\delta ^{15}\\)N) lake trout collected two ecoregions Lake Ontario. Values \\(\\delta ^{13}\\)C \\(\\delta ^{15}\\)N benthic baseline (amphipods; baseline 1; d13c_b1 d15n_b1)  pelagic baseline (dreissenids; baseline 2; d13c_b2 d15n_b2) means baseline calculated (c1,  n1, c2, n2).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/combined_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable isotope data for lake trout, amphipods (benthic baseline; baseline 1) and dreissenids (pelagic baseline; baseline 2), — combined_iso","text":"","code":"combined_iso"},{"path":"https://benjaminhlina.github.io/trps/reference/combined_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stable isotope data for lake trout, amphipods (benthic baseline; baseline 1) and dreissenids (pelagic baseline; baseline 2), — combined_iso","text":"data.frame containing 117 rows 13 variables id row id number common_name name spcies (.e., Lake Trout) ecoregion ecoregion samples collected d13c observed values \\(\\delta^{13}\\)C consumer d15n observed values \\(\\delta^{15}\\)N consumer d13c_b1 observed values \\(\\delta^{13}\\)C baseline 1 d15n_b1 observed values \\(\\delta^{15}\\)N baseline 1 d13c_b2 observed values \\(\\delta^{13}\\)C baseline 2 d15n_b2 observed values \\(\\delta^{15}\\)N baseline 2 c1 mean values \\(\\delta^{13}\\)C baseline 1 n1 mean values \\(\\delta^{15}\\)N baseline 1 c2 mean values \\(\\delta^{13}\\)C baseline 2 n2 mean values \\(\\delta^{15}\\)N baseline 2","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/consumer_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable isotope data for lake trout (consumer) — consumer_iso","title":"Stable isotope data for lake trout (consumer) — consumer_iso","text":"Stable isotope data (\\(\\delta^{13}\\)C \\(\\delta^ {15}\\)N) lake trout collected ecoregion Lake Ontario.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/consumer_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable isotope data for lake trout (consumer) — consumer_iso","text":"","code":"consumer_iso"},{"path":"https://benjaminhlina.github.io/trps/reference/consumer_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stable isotope data for lake trout (consumer) — consumer_iso","text":"data.frame containing 30 rows 6 variables common_name name spcies (.e., Lake Trout) ecoregion ecoregion samples collected d13c observed values \\(\\delta^{13}\\)C d15n observed values \\(\\delta^{15}\\)N","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian model - One Source Trophic Position — one_source_model","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"Estimate trophic position using one source model derived Post 2002 using Bayesian framework.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"","code":"one_source_model(bp = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baseline. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values  \\(\\delta^{15}\\)N baseline (n1).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"returns model structure one source model used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"$$\\delta^{15}N = \\delta^{15} N_1  + \\Delta N \\times (tp - \\lambda_1)$$ \\(\\delta^{15}\\)N values consumer, \\(\\delta^{15} N_1\\) mean \\(\\delta^{15}\\)N values baseline 1, \\(\\Delta\\)N trophic discrimination factor N (.e., dn mean 3.4), \\(tp\\) trophic position, \\(\\lambda_1\\) trophic level baselines often primary consumer (e.g., 2). data supplied brms() needs following variables d15n, n1, l1 (\\(\\lambda\\)) usually 2.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"","code":"one_source_model() #> d15n ~ n1 + dn * (tp - l1)  #> dn ~ 1 #> tp ~ 1"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian priors - One Source Trophic Position — one_source_priors","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"Create priors one source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"","code":"one_source_priors(bp = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baseline. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N  baseline (n1).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"returns priors one source model used brms() call.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"","code":"one_source_priors() #>                        prior class      coef group resp dpar nlpar    lb #>         normal(dn, dn_sigma)     b Intercept                    dn  <NA> #>        uniform(tp_lb, tp_ub)     b                              tp tp_lb #>  uniform(sigma_lb, sigma_ub) sigma                                  <NA> #>        ub source #>      <NA>   user #>     tp_ub   user #>  sigma_ub   user"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"Adjust priors one source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"","code":"one_source_priors_params(   n1 = NULL,   n1_sigma = NULL,   dn = NULL,   dn_sigma = NULL,   tp_lb = NULL,   tp_ub = NULL,   sigma_lb = NULL,   sigma_ub = NULL,   bp = FALSE )"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"n1 mean (\\(\\mu\\)) prior mean \\(\\delta^{15}\\)N baseline. Defaults 9. n1_sigma variance (\\(\\sigma\\)) mean \\(\\delta^{15}\\)N baseline. Defaults 1. dn mean (\\(\\mu\\)) prior value \\(\\Delta\\)N. Defaults 3.4. dn_sigma variance (\\(\\sigma\\)) \\(\\delta^{15}\\)N. Defaults 0.25. tp_lb lower bound prior trophic position. Defaults 2. tp_ub upper bound prior trophic position. Defaults 10. sigma_lb lower bound prior \\(\\sigma\\). Defaults 0. sigma_ub upper bound prior \\(\\sigma\\). Defaults 10. bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baseline. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"stanvars object used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"$$\\delta^{15}N = \\delta^{15} N_1 + \\delta N \\times (tp - \\lambda_1)$$ function allows user adjust priors following variables equation : mean (n1; \\(\\mu\\)) variance (n1_sigma; \\(\\sigma\\)) mean \\(\\delta^{15}\\)N given baseline (\\(\\delta^{15}N_1\\)). prior assumes normal distribution. mean (dn; \\(\\mu\\)) variance (dn_sigma; \\(\\sigma\\)) \\(\\Delta\\)N (.e, trophic enrichment factor). prior assumes normal distribution. lower (tp_lb) upper (tp_ub) bounds trophic position. prior assumes uniform distribution. lower (sigma_lb) upper (sigma_ub) bounds variance (\\(\\sigma\\)). prior assumes uniform distribution.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"","code":"one_source_priors_params() #> $dn #> $dn$name #> [1] \"dn\" #>  #> $dn$sdata #> [1] 3.4 #>  #> $dn$scode #> [1] \"real dn;\" #>  #> $dn$block #> [1] \"data\" #>  #> $dn$position #> [1] \"start\" #>  #> $dn$pll_args #> [1] \"data real dn\" #>  #>  #> $dn_sigma #> $dn_sigma$name #> [1] \"dn_sigma\" #>  #> $dn_sigma$sdata #> [1] 0.25 #>  #> $dn_sigma$scode #> [1] \"real dn_sigma;\" #>  #> $dn_sigma$block #> [1] \"data\" #>  #> $dn_sigma$position #> [1] \"start\" #>  #> $dn_sigma$pll_args #> [1] \"data real dn_sigma\" #>  #>  #> $tp_lb #> $tp_lb$name #> [1] \"tp_lb\" #>  #> $tp_lb$sdata #> [1] 2 #>  #> $tp_lb$scode #> [1] \"real tp_lb;\" #>  #> $tp_lb$block #> [1] \"data\" #>  #> $tp_lb$position #> [1] \"start\" #>  #> $tp_lb$pll_args #> [1] \"data real tp_lb\" #>  #>  #> $tp_ub #> $tp_ub$name #> [1] \"tp_ub\" #>  #> $tp_ub$sdata #> [1] 10 #>  #> $tp_ub$scode #> [1] \"real tp_ub;\" #>  #> $tp_ub$block #> [1] \"data\" #>  #> $tp_ub$position #> [1] \"start\" #>  #> $tp_ub$pll_args #> [1] \"data real tp_ub\" #>  #>  #> $sigma_lb #> $sigma_lb$name #> [1] \"sigma_lb\" #>  #> $sigma_lb$sdata #> [1] 0 #>  #> $sigma_lb$scode #> [1] \"real sigma_lb;\" #>  #> $sigma_lb$block #> [1] \"data\" #>  #> $sigma_lb$position #> [1] \"start\" #>  #> $sigma_lb$pll_args #> [1] \"data real sigma_lb\" #>  #>  #> $sigma_ub #> $sigma_ub$name #> [1] \"sigma_ub\" #>  #> $sigma_ub$sdata #> [1] 10 #>  #> $sigma_ub$scode #> [1] \"real sigma_ub;\" #>  #> $sigma_ub$block #> [1] \"data\" #>  #> $sigma_ub$position #> [1] \"start\" #>  #> $sigma_ub$pll_args #> [1] \"data real sigma_ub\" #>  #>  #> attr(,\"class\") #> [1] \"stanvars\""},{"path":"https://benjaminhlina.github.io/trps/reference/trps-package.html","id":null,"dir":"Reference","previous_headings":"","what":"trps: Bayesian trophic position models using stan — trps-package","title":"trps: Bayesian trophic position models using stan — trps-package","text":"Bayesian trophic position models using stan leveraging 'brms' stable isotope data. Trophic position models derived using equations Post (2002) doi:10.1890/0012-9658(2002)083[0703:USITET]2.0.CO;2 , Huevel et al. (2024) doi:10.1139/cjfas-2024-0028 .","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/trps-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"trps: Bayesian trophic position models using stan — trps-package","text":"Maintainer: Benjamin L. Hlina benjamin.hlina@gmail.com","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian model - Two Source Trophic Position — two_source_model","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"Trophic position using two source model derived Post 2002 using Bayesian framework.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"","code":"two_source_model(bp = FALSE, lambda = NULL)"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1 n2). lambda numerical value, 1 2, controls whether one two \\(\\lambda\\)s used. See details equations use 1 2. Defaults 1.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"returns model structure two source model used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"use following equations Post 2002: $$\\alpha = (\\delta^{13} C_c - \\delta ^{13}C_2) / (\\delta ^{13}C_1 - \\delta ^{13}C_2)$$ \\(\\delta^{13}C_c\\) isotopic value consumer, \\(\\delta^{13}C_1\\) mean isotopic value baseline 1 \\(\\delta^{13}C_2\\) mean isotopic value baseline 2. lambda set 1 $$\\delta^{15}N = \\Delta N \\times (tp - \\lambda_1) + n_1 \\times \\alpha + n_2 \\times (1 - \\alpha)$$ lambda set 2 $$\\delta^{15}N = \\Delta N \\times (tp - (\\lambda_1 \\times \\alpha + \\lambda_2 \\times (1 - \\alpha))) + n_1 \\times \\alpha + n_2 \\times (1 - \\alpha)$$ \\(\\delta^{15}\\)N values consumer, \\(n_1\\) mean \\(\\delta^{15}\\)N baseline 1, \\(n_2\\) mean \\(\\delta^{15}\\)N baseline 2, \\(\\Delta\\)N trophic discrimination factor N (.e., mean 3.4), tp trophic position, \\(\\alpha\\) carbon use derived first equation  \\(\\lambda_1\\) /\\(\\lambda_2\\) trophic levels baselines often primary consumer (e.g., 2 2.5). data supplied brms() using baselines trophic level (lambda argument set 1) needs following variables, d15n, n1, n2, l1 (\\(\\lambda_1\\)) usually 2. using baselines different trophic levels (lambda argument set 2) data frame needs l1 l2 numerical value trophic level (e.g., 2 2.5; \\(\\lambda_1\\) (\\(\\lambda_2\\)).","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"","code":"two_source_model() #> d15n ~ dn * (tp - l1) + n1 * alpha + n2 * (1 - alpha)  #> alpha ~ 1 #> tp ~ 1 #> dn ~ 1"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ar.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian model - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_model_ar","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_model_ar","text":"Estimate trophic position using two source model \\(\\alpha_r\\) derived Post 2002 Heuvel et al. 2024 using Bayesian framework.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_model_ar","text":"","code":"two_source_model_ar(bp = FALSE, lambda = NULL)"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_model_ar","text":"bp logical value controls whether  priors supplied model \\(\\delta^{15}\\)N pelagic benthic baselines. Default FALSE meaning model supplied priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1 n2). lambda numerical value, 1 2, controls whether one two lambdas used. See details equations use 1 2. Defaults 1.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_model_ar","text":"returns model structure two source model used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_model_ar","text":"use following equations derived Post 2002 Heuvel et al. 2024: $$\\alpha = (\\delta^{13} C_c - \\delta ^{13}C_2) /   (\\delta ^{13}C_1 - \\delta ^{13}C_2)$$ $$\\alpha = \\alpha_r \\times (\\alpha_{max} - \\alpha_{min}) + \\alpha_{min}$$ $$\\delta^{13}C = c_1 \\times \\alpha_r + c_2 \\times (1 - \\alpha_r)$$ $$\\delta^{15}N = \\Delta N \\times (tp - \\lambda_1) + n_1 \\times \\alpha_r + n_2 \\times (1 - \\alpha_r)$$ $$\\delta^{15}N = \\Delta N \\times (tp - (\\lambda_1 \\times \\alpha_r + \\lambda_2 \\times (1 - \\alpha_r))) + n_1 \\times \\alpha_r + n_2 \\times (1 - \\alpha_r)$$ equation 1) equation carbon source mixing model \\(\\delta^{13}C_c\\) isotopic value consumer, \\(\\delta^{13}C_1\\) mean isotopic value baseline 1 \\(\\delta^{13}C_2\\) mean isotopic value baseline 2. equation 2) \\(\\alpha\\) corrected using equations Heuvel et al. 2024. \\(\\alpha_r\\) corrected value (bound 0 1), \\(\\alpha_{min}\\) minimum \\(\\alpha\\) value calculated using add_alpha() \\(\\alpha_{max}\\) maximum \\(\\alpha\\) value calculated using add_alpha(). equation 3) equation carbon source mixing model \\(\\delta^{13}\\)C estimated using c_1, c_2  \\(\\alpha_r\\) calculated equation 1. equation 4) 5) \\(\\delta^{15}\\)N values consumer, \\(n_1\\) \\(\\delta^{15}\\)N values baseline 1, \\(n_2\\) \\(\\delta^{15}\\)N values baseline 2, \\(\\Delta\\)N trophic discrimination factor N (.e., mean 3.4), tp trophic position,  \\(\\lambda_1\\) /\\(\\lambda_2\\) trophic levels baselines often primary consumer (e.g., 2 2.5). data supplied brms() using baselines trophic level (lambda argument set 1) needs following variables, d15n, n1, n2, l1 (\\(\\lambda_1\\)) usually 2. using baselines different trophic levels (lambda argument set 2) data frame needs l1 l2 numerical value trophic level (e.g., 2 2.5; \\(\\lambda_1\\) \\(\\lambda_2\\)).","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_model_ar","text":"","code":"two_source_model_ar() #> alpha ~ ar * (max_alpha - min_alpha) + min_alpha  #> ar ~ 1 #> d13c ~ (c1 * ar) + (c2 * (1 - ar))  #> ar ~ 1 #> d15n ~ dn * (tp - l1) + n1 * ar + n2 * (1 - ar)  #> ar ~ 1 #> tp ~ 1 #> dn ~ 1"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian priors - Two Source Trophic Position — two_source_priors","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"Create priors two source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"","code":"two_source_priors(bp = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1 n2).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"returns priors two source model used brms() call.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"","code":"two_source_priors() #>                        prior class      coef group resp dpar nlpar    lb #>                   beta(a, b)     b                           alpha     0 #>         normal(dn, dn_sigma)     b Intercept                    dn  <NA> #>        uniform(tp_lb, tp_ub)     b                              tp tp_lb #>  uniform(sigma_lb, sigma_ub) sigma                                  <NA> #>        ub source #>         1   user #>      <NA>   user #>     tp_ub   user #>  sigma_ub   user"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ar.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_priors_ar","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_priors_ar","text":"Create priors trophic position using two source model \\(\\alpha_r\\) derived Post 2002 Heuvel et al. 2024.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_priors_ar","text":"","code":"two_source_priors_ar(bp = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_priors_ar","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N \\(\\delta^{15}\\)C baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N \\(\\delta^{15}\\)C baseline (c1, c2, n1, n2).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_priors_ar","text":"returns priors two source model used brms() call.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_r\\) — two_source_priors_ar","text":"","code":"two_source_priors_ar() #>                        prior class coef group  resp dpar nlpar    lb       ub #>                   beta(a, b)     b            alpha         ar     0        1 #>                   beta(a, b)     b             d13c         ar     0        1 #>                   beta(a, b)     b             d15n         ar     0        1 #>         normal(dn, dn_sigma)     b             d15n         dn  <NA>     <NA> #>        uniform(tp_lb, tp_ub)     b             d15n         tp tp_lb    tp_ub #>  uniform(sigma_lb, sigma_ub) sigma            alpha             <NA> sigma_ub #>  uniform(sigma_lb, sigma_ub) sigma             d13c             <NA> sigma_ub #>  uniform(sigma_lb, sigma_ub) sigma             d15n             <NA> sigma_ub #>  source #>    user #>    user #>    user #>    user #>    user #>    user #>    user #>    user"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"Adjust priors two source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"","code":"two_source_priors_params(   a = NULL,   b = NULL,   n1 = NULL,   n1_sigma = NULL,   n2 = NULL,   n2_sigma = NULL,   dn = NULL,   dn_sigma = NULL,   tp_lb = NULL,   tp_ub = NULL,   sigma_lb = NULL,   sigma_ub = NULL,   bp = FALSE )"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"(\\(\\alpha\\)) exponent random variable beta distribution. Defaults 1. See beta distribution information. b (\\(\\beta\\)) shape parameter beta distribution. Defaults 1. See beta distribution information. n1 mean (\\(\\mu\\)) prior mean first \\(\\delta^{15}\\)N baseline. Defaults 8. n1_sigma variance (\\(\\sigma\\))mean first \\(\\delta^{15}\\)N baseline. Defaults 1. n2 mean (\\(\\mu\\)) prior mean second \\(\\delta^{15}\\)N baseline. Defaults 9.5. n2_sigma variance (\\(\\sigma\\)) mean second \\(\\delta^{15}\\)N  baseline. Defaults 1. dn mean (\\(\\mu\\)) prior value \\(\\Delta\\)N. Defaults 3.4. dn_sigma variance (\\(\\sigma\\)) \\(\\delta^{15}\\)N. Defaults 0.5. tp_lb lower bound priors trophic position. Defaults 2. tp_ub upper bound priors  trophic position. Defaults 10. sigma_lb lower bound priors \\(\\sigma\\). Defaults 0. sigma_ub upper bound priors \\(\\sigma\\). Defaults 10. bp logical value controls whether informed baseline priors supplied model \\(\\delta^{15}\\)N baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs mean values \\(\\delta^{15}\\)N baseline (n1 n2)","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"stanvars object used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"lambda set 1 $$\\delta^{15}N = \\Delta N \\times (tp - \\lambda) + n_1 \\times \\alpha + n_2 \\times (1 - \\alpha)$$ lambda set 2 $$\\delta^{15}N = \\Delta N \\times (tp - (\\lambda_1 \\times \\alpha + \\lambda_2 \\times (1 - \\alpha))) + n_1 \\times \\alpha + n_2 \\times (1 - \\alpha)$$ function allows user adjust priors following variables equation : random exponent (\\(\\alpha\\); ) shape parameters (\\(\\beta\\); b) \\(\\alpha\\). prior assumes beta distribution. mean (n1; \\(\\mu\\)) variance (n1_sigma; \\(\\sigma\\)) mean first \\(\\delta\\)\\(^1\\)\\(^5\\)N given baseline. prior assumes normal distributions. mean (n2;\\(\\mu\\)) variance (n2_sigma; \\(\\sigma\\)) mean second \\(\\delta^{15}\\)N given baseline. prior assumes normal distributions. mean (dn; \\(\\mu\\)) variance (dn_sigma; \\(\\sigma\\)) \\(\\Delta\\)N (.e, trophic enrichment factor). prior assumes normal distributions. lower (tp_lb) upper (tp_ub) bounds priors trophic position. prior assumes uniform distributions. lower (sigma_lb) upper (sigma_ub) bounds variance (\\(\\sigma\\)). prior assumes uniform distributions.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"","code":"two_source_priors_params() #> $a #> $a$name #> [1] \"a\" #>  #> $a$sdata #> [1] 1 #>  #> $a$scode #> [1] \"real a;\" #>  #> $a$block #> [1] \"data\" #>  #> $a$position #> [1] \"start\" #>  #> $a$pll_args #> [1] \"data real a\" #>  #>  #> $b #> $b$name #> [1] \"b\" #>  #> $b$sdata #> [1] 1 #>  #> $b$scode #> [1] \"real b;\" #>  #> $b$block #> [1] \"data\" #>  #> $b$position #> [1] \"start\" #>  #> $b$pll_args #> [1] \"data real b\" #>  #>  #> $dn #> $dn$name #> [1] \"dn\" #>  #> $dn$sdata #> [1] 3.4 #>  #> $dn$scode #> [1] \"real dn;\" #>  #> $dn$block #> [1] \"data\" #>  #> $dn$position #> [1] \"start\" #>  #> $dn$pll_args #> [1] \"data real dn\" #>  #>  #> $dn_sigma #> $dn_sigma$name #> [1] \"dn_sigma\" #>  #> $dn_sigma$sdata #> [1] 0.5 #>  #> $dn_sigma$scode #> [1] \"real dn_sigma;\" #>  #> $dn_sigma$block #> [1] \"data\" #>  #> $dn_sigma$position #> [1] \"start\" #>  #> $dn_sigma$pll_args #> [1] \"data real dn_sigma\" #>  #>  #> $tp_lb #> $tp_lb$name #> [1] \"tp_lb\" #>  #> $tp_lb$sdata #> [1] 2 #>  #> $tp_lb$scode #> [1] \"real tp_lb;\" #>  #> $tp_lb$block #> [1] \"data\" #>  #> $tp_lb$position #> [1] \"start\" #>  #> $tp_lb$pll_args #> [1] \"data real tp_lb\" #>  #>  #> $tp_ub #> $tp_ub$name #> [1] \"tp_ub\" #>  #> $tp_ub$sdata #> [1] 10 #>  #> $tp_ub$scode #> [1] \"real tp_ub;\" #>  #> $tp_ub$block #> [1] \"data\" #>  #> $tp_ub$position #> [1] \"start\" #>  #> $tp_ub$pll_args #> [1] \"data real tp_ub\" #>  #>  #> $sigma_lb #> $sigma_lb$name #> [1] \"sigma_lb\" #>  #> $sigma_lb$sdata #> [1] 0 #>  #> $sigma_lb$scode #> [1] \"real sigma_lb;\" #>  #> $sigma_lb$block #> [1] \"data\" #>  #> $sigma_lb$position #> [1] \"start\" #>  #> $sigma_lb$pll_args #> [1] \"data real sigma_lb\" #>  #>  #> $sigma_ub #> $sigma_ub$name #> [1] \"sigma_ub\" #>  #> $sigma_ub$sdata #> [1] 10 #>  #> $sigma_ub$scode #> [1] \"real sigma_ub;\" #>  #> $sigma_ub$block #> [1] \"data\" #>  #> $sigma_ub$position #> [1] \"start\" #>  #> $sigma_ub$pll_args #> [1] \"data real sigma_ub\" #>  #>  #> attr(,\"class\") #> [1] \"stanvars\""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params_ar.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params_ar","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params_ar","text":"Adjust priors two source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params_ar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params_ar","text":"","code":"two_source_priors_params_ar(   a = NULL,   b = NULL,   n1 = NULL,   n1_sigma = NULL,   n2 = NULL,   n2_sigma = NULL,   c1 = NULL,   c1_sigma = NULL,   c2 = NULL,   c2_sigma = NULL,   dn = NULL,   dn_sigma = NULL,   tp_lb = NULL,   tp_ub = NULL,   sigma_lb = NULL,   sigma_ub = NULL,   bp = FALSE )"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params_ar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params_ar","text":"(\\(\\alpha\\)) exponent random variable beta distribution. Defaults 1. See beta distribution information. b (\\(\\beta\\)) shape parameter beta distribution. Defaults 1. See beta distribution information. n1 mean (\\(\\mu\\)) prior first \\(\\delta^{15}\\)N baseline. Defaults 9. n1_sigma variance (\\(\\sigma\\))first \\(\\delta^{15}\\)N baseline. Defaults 1. n2 mean (\\(\\mu\\)) prior second \\(\\delta^{15}\\)N baseline. Defaults 9. n2_sigma variance (\\(\\sigma\\)) second \\(\\delta^{15}\\)N  baseline. Defaults 1. c1 mean (\\(\\mu\\)) prior first \\(\\delta^{13}\\)C baseline. Defaults -21. c1_sigma variance (\\(\\sigma\\))first \\(\\delta^{13}\\)C baseline. Defaults 1. c2 mean (\\(\\mu\\)) prior second \\(\\delta^{13}\\)C baseline. Defaults -26. c2_sigma variance (\\(\\sigma\\)) second \\(\\delta^{13}\\)C  baseline. Defaults 1. dn mean (\\(\\mu\\)) prior value \\(\\Delta\\)N. Defaults 3.4. dn_sigma variance (\\(\\sigma\\)) \\(\\delta^{15}\\)N. Defaults 0.5. tp_lb lower bound priors trophic position. Defaults 2. tp_ub upper bound priors  trophic position. Defaults 10. sigma_lb lower bound priors \\(\\sigma\\). Defaults 0. sigma_ub upper bound priors \\(\\sigma\\). Defaults 10. bp logical value controls whether informed baseline priors supplied model \\(\\delta^{15}\\)N baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1 n2)","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params_ar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params_ar","text":"stanvars object used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params_ar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params_ar","text":"use following equations derived Post 2002 Heuvel et al. 2024: $$\\alpha = (\\delta^{13} C_c - \\delta ^{13}C_2) /   (\\delta ^{13}C_1 - \\delta ^{13}C_2)$$ $$\\alpha = \\alpha_r \\times (\\alpha_{max} - \\alpha_{min}) + \\alpha_{min}$$ $$\\delta^{13}C = c_1 \\times \\alpha_r + c_2 \\times (1 - \\alpha_r)$$ $$\\delta^{15}N = \\Delta N \\times (tp - \\lambda_1) + n_1 \\times \\alpha_r + n_2 \\times (1 - \\alpha_r)$$ $$\\delta^{15}N = \\Delta N \\times (tp - (\\lambda_1 \\times \\alpha_r + \\lambda_2 \\times (1 - \\alpha_r))) + n_1 \\times \\alpha_r + n_2 \\times (1 - \\alpha_r)$$ equation 1) equation carbon source mixing model \\(\\delta^{13}C_c\\) isotopic value consumer, \\(\\delta^{13}C_1\\) mean isotopic value baseline 1 \\(\\delta^{13}C_2\\) mean isotopic value baseline 2. equation 2) \\(\\alpha\\) corrected using equations Heuvel et al. 2024. \\(\\alpha_r\\) corrected value (bound 0 1), \\(\\alpha_{min}\\) minimum \\(\\alpha\\) value calculated using add_alpha() \\(\\alpha_{max}\\) maximum \\(\\alpha\\) value calculated using add_alpha(). equation 3) equation carbon source mixing model \\(\\delta^{13}\\)C estimated using c_1, c_2  \\(\\alpha_r\\) calculated equation 1. equation 4) 5) \\(\\delta^{15}\\)N values consumer, \\(n_1\\) \\(\\delta^{15}\\)N values baseline 1, \\(n_2\\) \\(\\delta^{15}\\)N values baseline 2, \\(\\Delta\\)N trophic discrimination factor N (.e., mean 3.4), tp trophic position,  \\(\\lambda_1\\) /\\(\\lambda_2\\) trophic levels baselines often primary consumer (e.g., 2 2.5). function allows user adjust priors following variables equation : random exponent (\\(\\alpha\\); ) shape parameters (\\(\\beta\\); b) \\(\\alpha_r\\). prior assumes beta distribution. mean (n2;\\(\\mu\\)) variance (n2_sigma; \\(\\sigma\\)) second \\(\\delta^{15}\\)N given baseline. prior assumes normal distributions. mean (c1;\\(\\mu\\)) variance (c1_sigma; \\(\\sigma\\)) second \\(\\delta^{13}\\)C given baseline. prior assumes normal distributions. mean (c2;\\(\\mu\\)) variance (c2_sigma; \\(\\sigma\\)) second \\(\\delta^{13}\\)C given baseline. prior assumes normal distributions. mean (dn; \\(\\mu\\)) variance (dn_sigma; \\(\\sigma\\)) \\(\\Delta\\)N (.e, trophic enrichment factor). prior assumes normal distributions. lower (tp_lb) upper (tp_ub) bounds priors trophic position. prior assumes uniform distributions. lower (sigma_lb) upper (sigma_ub) bounds variance (\\(\\sigma\\)). prior assumes uniform distributions.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params_ar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params_ar","text":"","code":"two_source_priors_params_ar() #> $a #> $a$name #> [1] \"a\" #>  #> $a$sdata #> [1] 1 #>  #> $a$scode #> [1] \"real a;\" #>  #> $a$block #> [1] \"data\" #>  #> $a$position #> [1] \"start\" #>  #> $a$pll_args #> [1] \"data real a\" #>  #>  #> $b #> $b$name #> [1] \"b\" #>  #> $b$sdata #> [1] 1 #>  #> $b$scode #> [1] \"real b;\" #>  #> $b$block #> [1] \"data\" #>  #> $b$position #> [1] \"start\" #>  #> $b$pll_args #> [1] \"data real b\" #>  #>  #> $dn #> $dn$name #> [1] \"dn\" #>  #> $dn$sdata #> [1] 3.4 #>  #> $dn$scode #> [1] \"real dn;\" #>  #> $dn$block #> [1] \"data\" #>  #> $dn$position #> [1] \"start\" #>  #> $dn$pll_args #> [1] \"data real dn\" #>  #>  #> $dn_sigma #> $dn_sigma$name #> [1] \"dn_sigma\" #>  #> $dn_sigma$sdata #> [1] 0.5 #>  #> $dn_sigma$scode #> [1] \"real dn_sigma;\" #>  #> $dn_sigma$block #> [1] \"data\" #>  #> $dn_sigma$position #> [1] \"start\" #>  #> $dn_sigma$pll_args #> [1] \"data real dn_sigma\" #>  #>  #> $tp_lb #> $tp_lb$name #> [1] \"tp_lb\" #>  #> $tp_lb$sdata #> [1] 2 #>  #> $tp_lb$scode #> [1] \"real tp_lb;\" #>  #> $tp_lb$block #> [1] \"data\" #>  #> $tp_lb$position #> [1] \"start\" #>  #> $tp_lb$pll_args #> [1] \"data real tp_lb\" #>  #>  #> $tp_ub #> $tp_ub$name #> [1] \"tp_ub\" #>  #> $tp_ub$sdata #> [1] 10 #>  #> $tp_ub$scode #> [1] \"real tp_ub;\" #>  #> $tp_ub$block #> [1] \"data\" #>  #> $tp_ub$position #> [1] \"start\" #>  #> $tp_ub$pll_args #> [1] \"data real tp_ub\" #>  #>  #> $sigma_lb #> $sigma_lb$name #> [1] \"sigma_lb\" #>  #> $sigma_lb$sdata #> [1] 0 #>  #> $sigma_lb$scode #> [1] \"real sigma_lb;\" #>  #> $sigma_lb$block #> [1] \"data\" #>  #> $sigma_lb$position #> [1] \"start\" #>  #> $sigma_lb$pll_args #> [1] \"data real sigma_lb\" #>  #>  #> $sigma_ub #> $sigma_ub$name #> [1] \"sigma_ub\" #>  #> $sigma_ub$sdata #> [1] 10 #>  #> $sigma_ub$scode #> [1] \"real sigma_ub;\" #>  #> $sigma_ub$block #> [1] \"data\" #>  #> $sigma_ub$position #> [1] \"start\" #>  #> $sigma_ub$pll_args #> [1] \"data real sigma_ub\" #>  #>  #> attr(,\"class\") #> [1] \"stanvars\""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/news/index.html","id":"id_28-feb-0-1-0","dir":"Changelog","previous_headings":"","what":"28-Feb-2025","title":"trps 0.1.0","text":"priors one-source model parameters priors one-source model priors two-source model without different lambda parameters priors two-source model without different lambda priors two-source model w/ different lambda (priors two-source) parameters priors two-source model w/ different lambda (priors two-source) [] priors parameters priors priors [] parameters priors vignettes one source [] vignettes two source [] vignettes twp source ac","code":""},{"path":"https://benjaminhlina.github.io/trps/news/index.html","id":"id_16-feb-0-1-0","dir":"Changelog","previous_headings":"","what":"16-Feb-2025","title":"trps 0.1.0","text":"priors one-source model parameters priors one-source model priors two-source model without different lambda parameters priors two-source model without different lambda [] priors two-source model w/ different lambda (priors two-source) [] parameters priors two-source model w/ different lambda (priors two-source) [] priors parameters priors [] priors [] parameters priors [] vignettes one source [] vignettes two source [] vignettes twp source ac","code":""},{"path":"https://benjaminhlina.github.io/trps/news/index.html","id":"id_11-feb-0-1-0","dir":"Changelog","previous_headings":"","what":"11-Feb-2025","title":"trps 0.1.0","text":"priors one-source model parameters priors one-source model [] priors two-source model without different lambda [] parameters priors two-source model without different lambda [] priors two-source model w/ different lambda (priors two-source) [] parameters priors two-source model w/ different lambda (priors two-source) [] priors parameters priors [] priors [] parameters priors [] vignettes one source [] vignettes two source [] vignettes twp source ac","code":""}]
