[{"path":[]},{"path":"https://benjaminhlina.github.io/trps/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://benjaminhlina.github.io/trps/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"our-objectives","dir":"Articles","previous_headings":"","what":"Our Objectives","title":"Estimate trophic position - one source model","text":"purpose vignette learn estimate trophic position species using stable isotope data (δ13C\\delta^{13}C δ15N\\delta^{15}N). can estiamte trophic psoition using one source model based equations Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"trophic-position-model","dir":"Articles","previous_headings":"","what":"Trophic Position Model","title":"Estimate trophic position - one source model","text":"one source model Post 2002 equation consists following: Trophic Position=λ+(δ15Nc−δ15Nb)ΔN \\text{Trophic Position} = \\lambda + \\frac{(\\delta^{15}N_c - \\delta^{15}N_b)}{\\Delta N} λ\\lambda trophic position baseline (e.g., 2), δ15Nc\\delta^{15}N_c δ15N\\delta^{15}N consumer, δ15Nb\\delta^{15}N_b δ15N\\delta^{15}N baseline, ΔN\\Delta N trophic enrichment factor (e.g., 3.4). use model Bayesian framework deployed one_source_model() {trps}, need rearrange equation following: δ15Nc=δ15Nb+ΔN×(Trophic Position−λ) \\delta^{15}N_c = \\delta^{15}N_b + \\Delta N \\times (\\text{Trophic Position} - \\lambda)","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"vignette-structure","dir":"Articles","previous_headings":"","what":"Vignette structure","title":"Estimate trophic position - one source model","text":"First need organize data prior running model. work use {dplyr} {tidyr} also use {data.table} work. running model use {trps} {brms} iterative processes provided {purrr}. run model use {bayesplot} assess models extract posterior draws using {bayestestR} {tidybayes}. Posterior distributions plotted using {ggplot2} {ggdist}.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load packages","title":"Estimate trophic position - one source model","text":"load packages needed carry anlaysis","code":"{   library(bayesplot)   library(bayestestR)   library(brms)   library(dplyr)   library(ggplot2)   library(ggdist)   library(purrr)   library(tidybayes)   library(trps) }"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"assess-data","dir":"Articles","previous_headings":"","what":"Assess data","title":"Estimate trophic position - one source model","text":"{trps} several data sets, include stable isotope data (δ13C\\delta^{13}C δ15N\\delta^{15}N) consumer, lake trout (Salvelinus namaycush), benthic baseline, amphipods, pelagic baseline, dreissenids two ecoregions Lake Ontario.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"consumer-data","dir":"Articles","previous_headings":"Assess data","what":"Consumer data","title":"Estimate trophic position - one source model","text":"check data set first consumer. can see data set contains common name consumer (common_name), ecoregion samples collected (ecoregion) δ13C\\delta^{13}C (d13c) δ15N\\delta^{15}N (d15n).","code":"consumer_iso #> # A tibble: 30 × 4 #>    common_name ecoregion  d13c  d15n #>    <fct>       <fct>     <dbl> <dbl> #>  1 Lake Trout  Embayment -22.9  15.9 #>  2 Lake Trout  Embayment -22.5  16.2 #>  3 Lake Trout  Embayment -22.8  17.0 #>  4 Lake Trout  Embayment -22.3  16.6 #>  5 Lake Trout  Embayment -22.5  16.6 #>  6 Lake Trout  Embayment -22.3  16.6 #>  7 Lake Trout  Embayment -22.3  16.6 #>  8 Lake Trout  Embayment -22.5  16.2 #>  9 Lake Trout  Embayment -22.9  16.4 #> 10 Lake Trout  Embayment -22.3  16.3 #> # ℹ 20 more rows"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"baseline-data","dir":"Articles","previous_headings":"Assess data","what":"Baseline data","title":"Estimate trophic position - one source model","text":"Next vignette assess benthic baseline data set. can see data set contains common name baseline (common_name), ecoregion samples collected (ecoregion) δ13C\\delta^{13}C (d13c) δ15N\\delta^{15}N (d15n).","code":"baseline_1_iso #> # A tibble: 14 × 4 #>    common_name ecoregion    c1    n1 #>    <chr>       <fct>     <dbl> <dbl> #>  1 Amphipoda   Embayment -26.2  8.44 #>  2 Amphipoda   Embayment -26.6  8.77 #>  3 Amphipoda   Embayment -26.0  8.05 #>  4 Amphipoda   Embayment -22.1 13.6  #>  5 Amphipoda   Embayment -24.3  6.99 #>  6 Amphipoda   Embayment -22.1  7.95 #>  7 Amphipoda   Embayment -24.7  7.37 #>  8 Amphipoda   Embayment -26.6  6.93 #>  9 Amphipoda   Embayment -24.6  6.97 #> 10 Amphipoda   Embayment -22.1  7.95 #> 11 Amphipoda   Embayment -24.7  7.37 #> 12 Amphipoda   Embayment -22.1  7.95 #> 13 Amphipoda   Embayment -24.7  7.37 #> 14 Amphipoda   Embayment -26.9 10.2"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"organizing-data","dir":"Articles","previous_headings":"","what":"Organizing data","title":"Estimate trophic position - one source model","text":"Now understand data need combine data sets estimate trophic position consumer. first need make id column data set assist joining together.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"consumer-data-1","dir":"Articles","previous_headings":"Organizing data","what":"Consumer data","title":"Estimate trophic position - one source model","text":"Let’s first add id consumer_iso data frame.","code":"consumer_iso <- consumer_iso %>%    group_by(common_name, ecoregion) %>%    mutate(     id = row_number()   ) %>%    ungroup() %>%    dplyr::select(id, common_name:d15n)"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"baseline-data-1","dir":"Articles","previous_headings":"Organizing data","what":"Baseline data","title":"Estimate trophic position - one source model","text":"Next let’s add id baseline_1_iso data frame. joining purposes going drop common_name data frame.","code":"baseline_1_iso <- baseline_1_iso %>%    group_by(common_name, ecoregion) %>%    mutate(     id = row_number()   ) %>%    ungroup() %>%    dplyr::select(id, ecoregion:n1)"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"joining-isotope-data","dir":"Articles","previous_headings":"Organizing data","what":"Joining isotope data","title":"Estimate trophic position - one source model","text":"Now consumer baseline consistent structure can join using left_join() {dplyr}. also add constant λ\\lambda (l1) data frame. can see successfully combined consumer baseline data. Important note, run model successfully columns need names d15n, n1, l1.","code":"combined_iso_os <- consumer_iso %>%    left_join(baseline_1_iso, by = c(\"id\", \"ecoregion\")) %>%    mutate(     l1 = 2   ) combined_iso_os #> # A tibble: 30 × 8 #>       id common_name ecoregion  d13c  d15n    c1    n1    l1 #>    <int> <fct>       <fct>     <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     1 Lake Trout  Embayment -22.9  15.9 -26.2  8.44     2 #>  2     2 Lake Trout  Embayment -22.5  16.2 -26.6  8.77     2 #>  3     3 Lake Trout  Embayment -22.8  17.0 -26.0  8.05     2 #>  4     4 Lake Trout  Embayment -22.3  16.6 -22.1 13.6      2 #>  5     5 Lake Trout  Embayment -22.5  16.6 -24.3  6.99     2 #>  6     6 Lake Trout  Embayment -22.3  16.6 -22.1  7.95     2 #>  7     7 Lake Trout  Embayment -22.3  16.6 -24.7  7.37     2 #>  8     8 Lake Trout  Embayment -22.5  16.2 -26.6  6.93     2 #>  9     9 Lake Trout  Embayment -22.9  16.4 -24.6  6.97     2 #> 10    10 Lake Trout  Embayment -22.3  16.3 -22.1  7.95     2 #> # ℹ 20 more rows"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"bayesian-analysis","dir":"Articles","previous_headings":"","what":"Bayesian Analysis","title":"Estimate trophic position - one source model","text":"can now estimate trophic position lake trout ecoregion Lake Ontario. things know running Bayesian analysis, suggest reading resources.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"priors","dir":"Articles","previous_headings":"Bayesian Analysis","what":"Priors","title":"Estimate trophic position - one source model","text":"Bayesian analyses rely supplying uninformed informed prior distributions parameter (coefficient; predictor) model. default informed priors one source model following, ΔN\\Delta N assumes normal distribution (dn; μ=3.4\\mu = 3.4; σ=0.25\\sigma = 0.25), trophic position assumes uniform distribution (lb = 2 ub = 10), σ\\sigma assumes uniform distribution (lb = 0 . ub = 10), informed priors desired δ15Nb\\delta^{15}N_b (n1; μ=9\\mu = 9; σ=1\\sigma = 1), can set argument bp TRUE one_source_ functions.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"model-convergence","dir":"Articles","previous_headings":"Bayesian Analysis","what":"Model convergence","title":"Estimate trophic position - one source model","text":"important things pay attention always run least 2 chains, model converge can try adjust amount samples burned-(discarded; brms can controlled argument warmup), adjust number iterative samples retained (brms can controlled argument iter), /adjust adapt_delta value using control = list(adapt_delta = 0.95). assessing model want R-hat 1 within 0.05 1, also want high value effective sample size (ESS), want trace plots look “grassy” “catapillery”, want posterior distributions look relatively normal.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"estimating-trophic-position","dir":"Articles","previous_headings":"","what":"Estimating trophic position","title":"Estimate trophic position - one source model","text":"use functions {trps} drop {brms} model. functions one_source_model() provides brm() formula structure needed run one source model. Next brm() needs structure priors can supplied prior argument using one_source_priors(). Lastly, values priors supplied stanvars argument using one_source_priors_params(). can adjust mean (μ\\mu), variance (σ\\sigma), upper lower bounds (lb ub) prior model within one_soruce_priors_params(), however, adjust priors good grasp Bayesian frameworks study system species.","code":""},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"model","dir":"Articles","previous_headings":"Estimating trophic position","what":"Model","title":"Estimate trophic position - one source model","text":"Let’s run model!","code":"m <- brm(   formula = one_source_model(),   prior = one_source_priors(),   stanvars = one_source_priors_params(),   data = combined_iso_os,   family = gaussian(),   chains = 2,   iter = 4000,   warmup = 1000,   cores = 4,   seed = 4,   control = list(adapt_delta = 0.95) ) #> Warning: Rows containing NAs were excluded from the model. #> Compiling Stan program... #> Start sampling"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"model-output","dir":"Articles","previous_headings":"Estimating trophic position","what":"Model output","title":"Estimate trophic position - one source model","text":"Let’s view summary model. can see R-hat 1 meaning variance among within chains equal (See {rstan} docmentation R-hat). ESS quite large, overall meaning model converging fitting accordingly.","code":"m #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: d15n ~ n1 + dn * (tp - l1)  #>          dn ~ 1 #>          tp ~ 1 #>    Data: combined_iso_os (Number of observations: 14)  #>   Draws: 2 chains, each with iter = 4000; warmup = 1000; thin = 1; #>          total post-warmup draws = 6000 #>  #> Regression Coefficients: #>              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> dn_Intercept     3.38      0.25     2.90     3.87 1.00     2669     2974 #> tp_Intercept     4.41      0.24     3.97     4.92 1.00     2584     3044 #>  #> Further Distributional Parameters: #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     1.93      0.43     1.31     2.97 1.00     2510     2532 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"trace-plots","dir":"Articles","previous_headings":"Estimating trophic position","what":"Trace plots","title":"Estimate trophic position - one source model","text":"Let’s view trace plots posterior distributions model.  can see trace plots look “grassy” meaning model converging!","code":"plot(m)"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"posterior-draws","dir":"Articles","previous_headings":"","what":"Posterior draws","title":"Estimate trophic position - one source model","text":"Let’s look summary output model. can see δN\\delta N estimated 3.38 l-95% CI 2.90, u-95% CI 3.87. move trophic position (tp) see trophic position estimated 4.41 l-95% CI 3.97, u-95% CI 4.92.","code":"m #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: d15n ~ n1 + dn * (tp - l1)  #>          dn ~ 1 #>          tp ~ 1 #>    Data: combined_iso_os (Number of observations: 14)  #>   Draws: 2 chains, each with iter = 4000; warmup = 1000; thin = 1; #>          total post-warmup draws = 6000 #>  #> Regression Coefficients: #>              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> dn_Intercept     3.38      0.25     2.90     3.87 1.00     2669     2974 #> tp_Intercept     4.41      0.24     3.97     4.92 1.00     2584     3044 #>  #> Further Distributional Parameters: #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     1.93      0.43     1.31     2.97 1.00     2510     2532 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"extract-posterior-draws","dir":"Articles","previous_headings":"Posterior draws","what":"Extract posterior draws","title":"Estimate trophic position - one source model","text":"use functions {tidybayes} work. First look names variables want extract using get_variables(). notice \"b_tp_Intercept\" name variable model object interested extracting. get posterior draws using gather_draws(). going rename \"b_tp_Intercept\" tp. Let’s view post_draws can see consists five variables .chain, .itteration, .draw, .variable (different variables interest supply gather_draws() one variable), .value (estimated value).","code":"get_variables(m) #>  [1] \"b_dn_Intercept\" \"b_tp_Intercept\" \"sigma\"          \"lprior\"         #>  [5] \"lp__\"           \"accept_stat__\"  \"stepsize__\"     \"treedepth__\"    #>  [9] \"n_leapfrog__\"   \"divergent__\"    \"energy__\" post_draws <- m %>%    gather_draws(b_tp_Intercept) %>%    mutate(     .variable = \"tp\"   ) post_draws #> # A tibble: 6,000 × 5 #> # Groups:   .variable [1] #>    .chain .iteration .draw .variable .value #>     <int>      <int> <int> <chr>      <dbl> #>  1      1          1     1 tp          4.49 #>  2      1          2     2 tp          4.94 #>  3      1          3     3 tp          4.50 #>  4      1          4     4 tp          4.24 #>  5      1          5     5 tp          4.26 #>  6      1          6     6 tp          4.34 #>  7      1          7     7 tp          4.09 #>  8      1          8     8 tp          4.46 #>  9      1          9     9 tp          4.57 #> 10      1         10    10 tp          4.03 #> # ℹ 5,990 more rows"},{"path":"https://benjaminhlina.github.io/trps/articles/Estimate_trophic_position_one_source_model.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Estimate trophic position - one source model","text":"Now posteriors extracted can plot . comparing trophic position among species groups, like using either violin plots, interval points, slab plots posteriors. can access violins {ggplot2} later available {ggdist}. However, example going plot distribution. ’ll demonstrate run model itteratively producing estimates trophic position groups  Congratulations estimate trophic position Lake Trout. extend compare trophic position Lake Trout among different regions data already formatted package.","code":"ggplot(data = post_draws, aes(x = .value)) +    geom_density() +    theme_bw(base_size = 15) +   theme(     panel.grid = element_blank()   ) +    labs(     x = \"P(Trophic Position | X)\",      y = \"Density\"   )"},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin L. Hlina. Author, maintainer.","code":""},{"path":"https://benjaminhlina.github.io/trps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Post DM (2002). “Using stable isotopes estimate trophic position: Models, methods, assumptions.” Ecology, 83(3), 703-718. doi:10.1890/0012-9658(2002)083[0703:USITET]2.0.CO;2, https://esajournals.onlinelibrary.wiley.com/doi/full/10.1890/0012-9658%282002%29083%5B0703%3AUSITET%5D2.0.CO%3B2. Heuvel C, Zhao Y, Fisk (2025). “Food web structure across basins Lake Erie, large freshwater ecosystem.” Canadian Journal Fisheries Aquatic Sciences, 82, 1-16. doi:10.1139/cjfas-2024-0028, https://cdnsciencepub.com/doi/10.1139/cjfas-2024-0028. Hlina BL (2025). trps: Bayesian trophic position models using stan. R package version 0.1.0, https://benjaminhlina.github.io/trps/.","code":"@Article{,   title = {Using stable isotopes to estimate trophic position: Models, methods, and assumptions},   author = {David M. Post},   journal = {Ecology},   year = {2002},   volume = {83},   number = {3},   pages = {703-718},   doi = {10.1890/0012-9658(2002)083[0703:USITET]2.0.CO;2},   url = {https://esajournals.onlinelibrary.wiley.com/doi/full/10.1890/0012-9658%282002%29083%5B0703%3AUSITET%5D2.0.CO%3B2}, } @Article{,   title = {Food web structure across basins in Lake Erie, a large freshwater ecosystem},   author = {C.E. Heuvel and Y.-M. Zhao and A.T. Fisk},   journal = {Canadian Journal of Fisheries and Aquatic Sciences},   year = {2025},   volume = {82},   pages = {1-16},   doi = {10.1139/cjfas-2024-0028},   url = {https://cdnsciencepub.com/doi/10.1139/cjfas-2024-0028}, } @Manual{,   title = {trps: Bayesian trophic position models using stan},   author = {Benjamin L. Hlina},   year = {2025},   note = {R package version 0.1.0},   url = {https://benjaminhlina.github.io/trps/}, }"},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"trps-","dir":"","previous_headings":"","what":"Bayesian trophic position models using stan","title":"Bayesian trophic position models using stan","text":"Bayesian trophic position models using stan (pronounced trips) leveraging {brms}. Equations trophic position models derived Post 2002 Heuvel et al. 2024 used stable isotope data different species.","code":""},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"progress","dir":"","previous_headings":"","what":"Progress","title":"Bayesian trophic position models using stan","text":"{trps} currently active development following progress: priors one-source model parameters priors one-source model priors two-source model without different lambda parameters priors two-source model without different lambda priors two-source model w/ different lambda (priors two-source) parameters priors two-source model w/ different lambda (priors two-source) [] priors parameters priors priors [] parameters priors [] vignettes model type","code":""},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian trophic position models using stan","text":"can install R-Universe version {trps} using following: can install development version {trps} using following:","code":"install.packages(\"trps\",                    repos = c(\"https://benjaminhlina.r-universe.dev\",                             \"https://cloud.r-project.org\")) devtools::install_github(\"benjaminhlina/trps\") library(trps)"},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Bayesian trophic position models using stan","text":"Info come","code":""},{"path":"https://benjaminhlina.github.io/trps/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"Bayesian trophic position models using stan","text":"cite package please cite following publications Post, D.M. 2002. Using Stable Isotopes Estimate Trophic Position: Models, Methods, Assumptions. Ecology 83(3): 703-718. doi: 10.2307/3071875. Heuvel, C., Zhao, Y., Fisk, .T. 2025. Food web structure across basins Lake Erie, large freshwater ecosystem. Canadian Journal Fisheries Aquatic Sciences 82:1-16. doi: 10.1139/cjfas-2024-0028. Hlina B.L. 2025. trps: Bayesian trophic position models using stan. R package version 0.1.0. https://benjaminhlina.github.io/trps/","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and add \\(\\alpha\\) — add_alpha","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"Calculate \\(\\alpha\\) two source trophic position model using equations Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"","code":"add_alpha(data, abs = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"data data.frame stable isotope samples mean values two baselines. aquatic ecosystems, baseline one needs come benthic source baseline two needs come pelagic source. Baseline \\(\\delta^{13}\\)C columns need named c1_mean c2_mean, consumer's \\(\\delta^{13}\\)C column named d13c. abs logical controls whether absolute value taken numerator denominator. Default FALSE meaning absolute value taken.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"data.frame alpha, min_alpha, max_alpha added.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"$$\\alpha = (\\delta^{13}C_c - \\delta ^{13}C_2) / (\\delta ^{13}C_1 - \\delta ^{13}C_2)$$ \\(\\delta^{13}C_c\\) isotopic value consumer, \\(\\delta^{13}C_1\\) mean isotopic value baseline 1 \\(\\delta^{13}C_2\\) mean isotopic value baseline 2.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/add_alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and add \\(\\alpha\\) — add_alpha","text":"","code":"combined_iso |>   add_alpha() #> # A tibble: 30 × 16 #>       id common_name ecoregion  d13c  d15n    c1    n1    c2    n2 c1_mean #>    <int> <fct>       <fct>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>   <dbl> #>  1     1 Lake Trout  Embayment -22.9  15.9 -26.2  8.44 -23.4  7.81   -24.6 #>  2     2 Lake Trout  Embayment -22.5  16.2 -26.6  8.77 -22.9  7.61   -24.6 #>  3     3 Lake Trout  Embayment -22.8  17.0 -26.0  8.05 -22.7  7.32   -24.6 #>  4     4 Lake Trout  Embayment -22.3  16.6 -22.1 13.6  -23.4  7.81   -24.6 #>  5     5 Lake Trout  Embayment -22.5  16.6 -24.3  6.99 -22.9  7.61   -24.6 #>  6     6 Lake Trout  Embayment -22.3  16.6 -22.1  7.95 -22.7  7.32   -24.6 #>  7     7 Lake Trout  Embayment -22.3  16.6 -24.7  7.37 -23.4  7.81   -24.6 #>  8     8 Lake Trout  Embayment -22.5  16.2 -26.6  6.93 -22.9  7.61   -24.6 #>  9     9 Lake Trout  Embayment -22.9  16.4 -24.6  6.97 -22.7  7.32   -24.6 #> 10    10 Lake Trout  Embayment -22.3  16.3 -22.1  7.95 -26.9 10.2    -24.6 #> # ℹ 20 more rows #> # ℹ 6 more variables: n1_mean <dbl>, c2_mean <dbl>, n2_mean <dbl>, alpha <dbl>, #> #   min_alpha <dbl>, max_alpha <dbl>"},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_1_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable isotope data for amphipods (baseline 1) — baseline_1_iso","title":"Stable isotope data for amphipods (baseline 1) — baseline_1_iso","text":"Stable isotope data (\\(\\delta^{13}\\)C \\(\\delta^{15}\\)N) amphipods collected ecoregion Lake Ontario.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_1_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable isotope data for amphipods (baseline 1) — baseline_1_iso","text":"","code":"baseline_1_iso"},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_1_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stable isotope data for amphipods (baseline 1) — baseline_1_iso","text":"data.frame containing 14 rows 5 variables common_name name spcies (.e., Amphipoda) ecoregion ecoregion samples collected c1 observed values \\(\\delta^{13}\\)C n1 observed values \\(\\delta^{15}\\)N","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_2_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable isotope data for dreissenids (baseline 2) — baseline_2_iso","title":"Stable isotope data for dreissenids (baseline 2) — baseline_2_iso","text":"Stable isotope data (\\(\\delta^{13}\\)C \\(\\delta^{15}\\)N) dreissenid collected ecoregion Lake Ontario.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_2_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable isotope data for dreissenids (baseline 2) — baseline_2_iso","text":"","code":"baseline_2_iso"},{"path":"https://benjaminhlina.github.io/trps/reference/baseline_2_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stable isotope data for dreissenids (baseline 2) — baseline_2_iso","text":"data.frame containing 12 rows 5 variables common_name name spcies (.e., Dreissenids) ecoregion ecoregion samples collected c2 observed values \\(\\delta^{13}\\)C n2 observed values \\(\\delta^{15}\\)N","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/combined_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable isotope data for lake trout, amphipods (benthic baseline; baseline 1) and dreissenids (pelagic baseline; baseline 2), — combined_iso","title":"Stable isotope data for lake trout, amphipods (benthic baseline; baseline 1) and dreissenids (pelagic baseline; baseline 2), — combined_iso","text":"Stable isotope data (\\(\\delta^{13}\\)C \\(\\delta ^{15}\\)N) lake trout collected ecoregion Lake Ontario. Values \\(\\delta ^{13}\\)C \\(\\delta ^{15}\\)N benthic baseline (amphipods; baseline 1; c1 n1)  pelagic baseline (dreissenids; baseline 2; c2 n2) means baseline calculated (c1_mean,  n1_mean, c2_mean, n2_mean).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/combined_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable isotope data for lake trout, amphipods (benthic baseline; baseline 1) and dreissenids (pelagic baseline; baseline 2), — combined_iso","text":"","code":"combined_iso"},{"path":"https://benjaminhlina.github.io/trps/reference/combined_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stable isotope data for lake trout, amphipods (benthic baseline; baseline 1) and dreissenids (pelagic baseline; baseline 2), — combined_iso","text":"data.frame containing 30 rows 13 variables id row id number common_name name spcies (.e., Lake Trout) ecoregion ecoregion samples collected d13c observed values \\(\\delta^{13}\\)C consumer d15n observed values \\(\\delta^{15}\\)N consumer c1 observed values \\(\\delta^{13}\\)C baseline 1 n1 observed values \\(\\delta^{15}\\)N baseline 1 c2 observed values \\(\\delta^{13}\\)C baseline 2 n2 observed values \\(\\delta^{15}\\)N baseline 2 c1_mean mean values \\(\\delta^{13}\\)C baseline 1 n1_mean mean values \\(\\delta^{15}\\)N baseline 1 c2_mean mean values \\(\\delta^{13}\\)C baseline 2 n2_mean mean values \\(\\delta^{15}\\)N baseline 2","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/consumer_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable isotope data for lake trout (consumer) — consumer_iso","title":"Stable isotope data for lake trout (consumer) — consumer_iso","text":"Stable isotope data (\\(\\delta^{13}\\)C \\(\\delta^ {15}\\)N) lake trout collected ecoregion Lake Ontario.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/consumer_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable isotope data for lake trout (consumer) — consumer_iso","text":"","code":"consumer_iso"},{"path":"https://benjaminhlina.github.io/trps/reference/consumer_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stable isotope data for lake trout (consumer) — consumer_iso","text":"data.frame containing 30 rows 6 variables common_name name spcies (.e., Lake Trout) ecoregion ecoregion samples collected d13c observed values \\(\\delta^{13}\\)C d15n observed values \\(\\delta^{15}\\)N","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian model - One Source Trophic Position — one_source_model","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"Estimate trophic position using one source model derived Post 2002 using Bayesian framework.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"","code":"one_source_model(bp = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baseline. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values  \\(\\delta^{15}\\)N baseline (n1).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"returns model structure one source model used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"$$\\delta^{15}N = \\delta^{15} N_1  + \\Delta N \\times (tp - \\lambda_1)$$ \\(\\delta^{15}\\)N values consumer, \\(\\delta^{15} N_1\\) \\(\\delta^{15}\\)N values baseline 1, \\(\\Delta\\)N trophic discrimination factor N (.e., dn mean 3.4), \\(tp\\) trophic position, \\(\\lambda_1\\) trophic level baselines often primary consumer (e.g., 2). data supplied brms() needs following variables d15n, n1, l1 (\\(\\lambda\\)) usually 2.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian model - One Source Trophic Position — one_source_model","text":"","code":"one_source_model() #> d15n ~ n1 + dn * (tp - l1)  #> dn ~ 1 #> tp ~ 1"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian priors - One Source Trophic Position — one_source_priors","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"Create priors one source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"","code":"one_source_priors(bp = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baseline. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N  baseline (n1).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"returns priors one source model used brms() call.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian priors - One Source Trophic Position — one_source_priors","text":"","code":"one_source_priors() #>                        prior class      coef group resp dpar nlpar    lb #>         normal(dn, dn_sigma)     b Intercept                    dn  <NA> #>        uniform(tp_lb, tp_ub)     b                              tp tp_lb #>  uniform(sigma_lb, sigma_ub) sigma                                  <NA> #>        ub source #>      <NA>   user #>     tp_ub   user #>  sigma_ub   user"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"Adjust priors one source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"","code":"one_source_priors_params(   n1 = NULL,   n1_sigma = NULL,   dn = NULL,   dn_sigma = NULL,   tp_lb = NULL,   tp_ub = NULL,   sigma_lb = NULL,   sigma_ub = NULL,   bp = FALSE )"},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"n1 mean (\\(\\mu\\)) prior \\(\\delta^{15}\\)N baseline. Defaults 9. n1_sigma variance (\\(\\sigma\\)) \\(\\delta^{15}\\)N baseline. Defaults 1. dn mean (\\(\\mu\\)) prior value \\(\\Delta\\)N. Defaults 3.4. dn_sigma variance (\\(\\sigma\\)) \\(\\delta^{15}\\)N. Defaults 0.25. tp_lb lower bound prior trophic position. Defaults 2. tp_ub upper bound prior trophic position. Defaults 10. sigma_lb lower bound prior \\(\\sigma\\). Defaults 0. sigma_ub upper bound prior \\(\\sigma\\). Defaults 10. bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baseline. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"stanvars object used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"$$\\delta^{15}N = \\delta^{15} N_1 + \\delta N \\times (tp - \\lambda_1)$$ function allows user adjust priors following variables equation : mean (n1; \\(\\mu\\)) variance (n1_sigma; \\(\\sigma\\)) \\(\\delta^{15}\\)N given baseline (\\(\\delta^{15}N_1\\)). prior assumes normal distribution. mean (dn; \\(\\mu\\)) variance (dn_sigma; \\(\\sigma\\)) \\(\\Delta\\)N (.e, trophic enrichment factor). prior assumes normal distribution. lower (tp_lb) upper (tp_ub) bounds trophic position. prior assumes uniform distribution. lower (sigma_lb) upper (sigma_ub) bounds variance (\\(\\sigma\\)). prior assumes uniform distribution.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/one_source_priors_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Bayesian priors - One Source Trophic Position — one_source_priors_params","text":"","code":"one_source_priors_params() #> $dn #> $dn$name #> [1] \"dn\" #>  #> $dn$sdata #> [1] 3.4 #>  #> $dn$scode #> [1] \"real dn;\" #>  #> $dn$block #> [1] \"data\" #>  #> $dn$position #> [1] \"start\" #>  #> $dn$pll_args #> [1] \"data real dn\" #>  #>  #> $dn_sigma #> $dn_sigma$name #> [1] \"dn_sigma\" #>  #> $dn_sigma$sdata #> [1] 0.25 #>  #> $dn_sigma$scode #> [1] \"real dn_sigma;\" #>  #> $dn_sigma$block #> [1] \"data\" #>  #> $dn_sigma$position #> [1] \"start\" #>  #> $dn_sigma$pll_args #> [1] \"data real dn_sigma\" #>  #>  #> $tp_lb #> $tp_lb$name #> [1] \"tp_lb\" #>  #> $tp_lb$sdata #> [1] 2 #>  #> $tp_lb$scode #> [1] \"real tp_lb;\" #>  #> $tp_lb$block #> [1] \"data\" #>  #> $tp_lb$position #> [1] \"start\" #>  #> $tp_lb$pll_args #> [1] \"data real tp_lb\" #>  #>  #> $tp_ub #> $tp_ub$name #> [1] \"tp_ub\" #>  #> $tp_ub$sdata #> [1] 10 #>  #> $tp_ub$scode #> [1] \"real tp_ub;\" #>  #> $tp_ub$block #> [1] \"data\" #>  #> $tp_ub$position #> [1] \"start\" #>  #> $tp_ub$pll_args #> [1] \"data real tp_ub\" #>  #>  #> $sigma_lb #> $sigma_lb$name #> [1] \"sigma_lb\" #>  #> $sigma_lb$sdata #> [1] 0 #>  #> $sigma_lb$scode #> [1] \"real sigma_lb;\" #>  #> $sigma_lb$block #> [1] \"data\" #>  #> $sigma_lb$position #> [1] \"start\" #>  #> $sigma_lb$pll_args #> [1] \"data real sigma_lb\" #>  #>  #> $sigma_ub #> $sigma_ub$name #> [1] \"sigma_ub\" #>  #> $sigma_ub$sdata #> [1] 10 #>  #> $sigma_ub$scode #> [1] \"real sigma_ub;\" #>  #> $sigma_ub$block #> [1] \"data\" #>  #> $sigma_ub$position #> [1] \"start\" #>  #> $sigma_ub$pll_args #> [1] \"data real sigma_ub\" #>  #>  #> attr(,\"class\") #> [1] \"stanvars\""},{"path":"https://benjaminhlina.github.io/trps/reference/trps-package.html","id":null,"dir":"Reference","previous_headings":"","what":"trps: Bayesian trophic position models using stan — trps-package","title":"trps: Bayesian trophic position models using stan — trps-package","text":"Bayesian trophic position models using stan leveraging 'brms' stable isotope data. Trophic position models derived using equations Post (2002) doi:10.1890/0012-9658(2002)083[0703:USITET]2.0.CO;2 , Huevel et al. (2024) doi:10.1139/cjfas-2024-0028 .","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/trps-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"trps: Bayesian trophic position models using stan — trps-package","text":"Maintainer: Benjamin L. Hlina benjamin.hlina@gmail.com","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian model - Two Source Trophic Position — two_source_model","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"Trophic position using two source model derived Post 2002 using Bayesian framework.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"","code":"two_source_model(bp = FALSE, lambda = NULL)"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1 n2). lambda numerical value, 1 2, controls whether one two \\(\\lambda\\)s used. See details equations use 1 2. Defaults 1.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"returns model structure two source model used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"use following equations Post 2002: $$\\alpha = (\\delta^{13} C_c - \\delta ^{13}C_2) / (\\delta ^{13}C_1 - \\delta ^{13}C_2)$$ \\(\\delta^{13}C_c\\) isotopic value consumer, \\(\\delta^{13}C_1\\) mean isotopic value baseline 1 \\(\\delta^{13}C_2\\) mean isotopic value baseline 2. lambda set 1 $$\\delta^{15}N = \\Delta N \\times (tp - \\lambda_1) + n_1 \\times \\alpha + n_2 \\times (1 - \\alpha)$$ lambda set 2 $$\\delta^{15}N = \\Delta N \\times (tp - (\\lambda_1 \\times \\alpha + \\lambda_2 \\times (1 - \\alpha))) + n_1 \\times \\alpha + n_2 \\times (1 - \\alpha)$$ \\(\\delta^{15}\\)N values consumer, \\(n_1\\) \\(\\delta^{15}\\)N values baseline 1, \\(n_2\\) \\(\\delta^{15}\\)N values baseline 2, \\(\\Delta\\)N trophic discrimination factor N (.e., mean 3.4), tp trophic position, \\(\\alpha\\) carbon use derived first equation  \\(\\lambda_1\\) /\\(\\lambda_2\\) trophic levels baselines often primary consumer (e.g., 2 2.5). data supplied brms() using baselines trophic level (lambda argument set 1) needs following variables, d15n, n1, n2, l1 (\\(\\lambda_1\\)) usually 2. using baselines different trophic levels (lambda argument set 2) data frame needs l1 l2 numerical value trophic level (e.g., 2 2.5; \\(\\lambda_1\\) (\\(\\lambda_2\\)).","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian model - Two Source Trophic Position — two_source_model","text":"","code":"two_source_model() #> d15n ~ dn * (tp - l1) + n1 * alpha + n2 * (1 - alpha)  #> alpha ~ 1 #> tp ~ 1 #> dn ~ 1"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ac.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian model - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_model_ac","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_model_ac","text":"Estimate trophic position using two source model \\(\\alpha_c\\) derived Post 2002 Heuvel et al. 2024 using Bayesian framework.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_model_ac","text":"","code":"two_source_model_ac(bp = FALSE, lambda = NULL)"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_model_ac","text":"bp logical value controls whether  priors supplied model \\(\\delta^{15}\\)N pelagic benthic baselines. Default FALSE meaning model supplied priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1 n2). lambda numerical value, 1 2, controls whether one two lambdas used. See details equations use 1 2. Defaults 1.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_model_ac","text":"returns model structure two source model used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ac.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_model_ac","text":"use following equations derived Post 2002 Heuvel et al. 2024: $$\\alpha = (\\delta^{13} C_c - \\delta ^{13}C_2) /   (\\delta ^{13}C_1 - \\delta ^{13}C_2)$$ $$\\alpha = \\alpha_c \\times (\\alpha_{max} - \\alpha_{min}) + \\alpha_{min}$$ $$\\delta^{13}C = c_1 \\times \\alpha_c + c_2 \\times (1 - \\alpha_c)$$ $$\\delta^{15}N = \\Delta N \\times (tp - \\lambda_1) + n_1 \\times \\alpha_c + n_2 \\times (1 - \\alpha_c)$$ $$\\delta^{15}N = \\Delta N \\times (tp - (\\lambda_1 \\times \\alpha_c + \\lambda_2 \\times (1 - \\alpha_c))) + n_1 \\times \\alpha_c + n_2 \\times (1 - \\alpha_c)$$ equation 1) equation carbon source mixing model \\(\\delta^{13}C_c\\) isotopic value consumer, \\(\\delta^{13}C_1\\) mean isotopic value baseline 1 \\(\\delta^{13}C_2\\) mean isotopic value baseline 2. equation 2) \\(\\alpha\\) corrected using equations Heuvel et al. 2024. \\(\\alpha_c\\) corrected value (bound 0 1), \\(\\alpha_{min}\\) minimum \\(\\alpha\\) value calculated using add_alpha() \\(\\alpha_{max}\\) maximum \\(\\alpha\\) value calculated using add_alpha(). equation 3) equation carbon source mixing model \\(\\delta^{13}\\)C estimated using c_1, c_2  \\(\\alpha_c\\) calculated equation 1. equation 4) 5) \\(\\delta^{15}\\)N values consumer, \\(n_1\\) \\(\\delta^{15}\\)N values baseline 1, \\(n_2\\) \\(\\delta^{15}\\)N values baseline 2, \\(\\Delta\\)N trophic discrimination factor N (.e., mean 3.4), tp trophic position,  \\(\\lambda_1\\) /\\(\\lambda_2\\) trophic levels baselines often primary consumer (e.g., 2 2.5). data supplied brms() using baselines trophic level (lambda argument set 1) needs following variables, d15n, n1, n2, l1 (\\(\\lambda_1\\)) usually 2. using baselines different trophic levels (lambda argument set 2) data frame needs l1 l2 numerical value trophic level (e.g., 2 2.5; \\(\\lambda_1\\) \\(\\lambda_2\\)).","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_model_ac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian model - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_model_ac","text":"","code":"two_source_model_ac() #> alpha ~ ac * (max_alpha - min_alpha) + min_alpha  #> ac ~ 1 #> d13c ~ (c1 * ac) + (c2 * (1 - ac))  #> ac ~ 1 #> d15n ~ dn * (tp - l1) + n1 * ac + n2 * (1 - ac)  #> ac ~ 1 #> tp ~ 1 #> dn ~ 1"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian priors - Two Source Trophic Position — two_source_priors","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"Create priors two source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"","code":"two_source_priors(bp = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1 n2).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"returns priors two source model used brms() call.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian priors - Two Source Trophic Position — two_source_priors","text":"","code":"two_source_priors() #>                        prior class      coef group resp dpar nlpar    lb #>                   beta(a, b)     b                           alpha     0 #>         normal(dn, dn_sigma)     b Intercept                    dn  <NA> #>        uniform(tp_lb, tp_ub)     b                              tp tp_lb #>  uniform(sigma_lb, sigma_ub) sigma                                  <NA> #>        ub source #>         1   user #>      <NA>   user #>     tp_ub   user #>  sigma_ub   user"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ac.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_priors_ac","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_priors_ac","text":"Create priors trophic position using two source model \\(\\alpha_c\\) derived Post 2002 Heuvel et al. 2024.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_priors_ac","text":"","code":"two_source_priors_ac(bp = FALSE)"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_priors_ac","text":"bp logical value controls whether informed priors supplied model \\(\\delta^{15}\\)N \\(\\delta^{15}\\)C baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N \\(\\delta^{15}\\)C baseline (c1, c2, n1, n2).","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_priors_ac","text":"returns priors two source model used brms() call.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_ac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian priors - Two Source Trophic Position with \\(\\alpha_c\\) — two_source_priors_ac","text":"","code":"two_source_priors_ac() #>                        prior class coef group  resp dpar nlpar    lb       ub #>                   beta(a, b)     b            alpha         ac     0        1 #>                   beta(a, b)     b             d13c         ac     0        1 #>                   beta(a, b)     b             d15n         ac     0        1 #>         normal(dn, dn_sigma)     b             d15n         dn  <NA>     <NA> #>        uniform(tp_lb, tp_ub)     b             d15n         tp tp_lb    tp_ub #>  uniform(sigma_lb, sigma_ub) sigma            alpha             <NA> sigma_ub #>  uniform(sigma_lb, sigma_ub) sigma             d13c             <NA> sigma_ub #>  uniform(sigma_lb, sigma_ub) sigma             d15n             <NA> sigma_ub #>  source #>    user #>    user #>    user #>    user #>    user #>    user #>    user #>    user"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"Adjust priors two source trophic position model derived Post 2002.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"","code":"two_source_priors_params(   a = NULL,   b = NULL,   n1 = NULL,   n1_sigma = NULL,   n2 = NULL,   n2_sigma = NULL,   dn = NULL,   dn_sigma = NULL,   tp_lb = NULL,   tp_ub = NULL,   sigma_lb = NULL,   sigma_ub = NULL,   bp = FALSE )"},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"(\\(\\alpha\\)) exponent random variable beta distribution. Defaults 1. See beta distribution information. b (\\(\\beta\\)) shape parameter beta distribution. Defaults 1. See beta distribution information. n1 mean (\\(\\mu\\)) prior first \\(\\delta^{15}\\)N baseline. Defaults 9. n1_sigma variance (\\(\\sigma\\))first \\(\\delta^{15}\\)N baseline. Defaults 1. n2 mean (\\(\\mu\\)) prior second \\(\\delta^{15}\\)N baseline. Defaults 9. n2_sigma variance (\\(\\sigma\\)) second \\(\\delta^{15}\\)N  baseline. Defaults 1. dn mean (\\(\\mu\\)) prior value \\(\\Delta\\)N. Defaults 3.4. dn_sigma variance (\\(\\sigma\\)) \\(\\delta^{15}\\)N. Defaults 0.5. tp_lb lower bound priors trophic position. Defaults 2. tp_ub upper bound priors  trophic position. Defaults 10. sigma_lb lower bound priors \\(\\sigma\\). Defaults 0. sigma_ub upper bound priors \\(\\sigma\\). Defaults 10. bp logical value controls whether informed baseline priors supplied model \\(\\delta^{15}\\)N baselines. Default FALSE meaning model use uninformed priors, however, supplied data.frame needs values \\(\\delta^{15}\\)N baseline (n1 n2)","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"stanvars object used brms() call.","code":""},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"lambda set 1 $$\\delta^{15}N = \\Delta N \\times (tp - \\lambda) + n_1 \\times \\alpha + n_2 \\times (1 - \\alpha)$$ lambda set 2 $$\\delta^{15}N = \\Delta N \\times (tp - (\\lambda_1 \\times \\alpha + \\lambda_2 \\times (1 - \\alpha))) + n_1 \\times \\alpha + n_2 \\times (1 - \\alpha)$$ function allows user adjust priors following variables equation : mean (n1; \\(\\mu\\)) variance (n1_sigma; \\(\\sigma\\)) first \\(\\delta\\)\\(^1\\)\\(^5\\)N given baseline. prior assumes normal distributions. mean (n2;\\(\\mu\\)) variance (n2_sigma; \\(\\sigma\\)) second \\(\\delta^{15}\\)N given baseline. prior assumes normal distributions. mean (dn; \\(\\mu\\)) variance (dn_sigma; \\(\\sigma\\)) \\(\\Delta\\)N (.e, trophic enrichment factor). prior assumes normal distributions. lower (tp_lb) upper (tp_ub) bounds priors trophic position. prior assumes uniform distributions. lower (sigma_lb) upper (sigma_ub) bounds variance (\\(\\sigma\\)). prior assumes uniform distributions.","code":""},{"path":[]},{"path":"https://benjaminhlina.github.io/trps/reference/two_source_priors_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Bayesian priors - Two Source Trophic Position — two_source_priors_params","text":"","code":"two_source_priors_params() #> $a #> $a$name #> [1] \"a\" #>  #> $a$sdata #> [1] 1 #>  #> $a$scode #> [1] \"real a;\" #>  #> $a$block #> [1] \"data\" #>  #> $a$position #> [1] \"start\" #>  #> $a$pll_args #> [1] \"data real a\" #>  #>  #> $b #> $b$name #> [1] \"b\" #>  #> $b$sdata #> [1] 1 #>  #> $b$scode #> [1] \"real b;\" #>  #> $b$block #> [1] \"data\" #>  #> $b$position #> [1] \"start\" #>  #> $b$pll_args #> [1] \"data real b\" #>  #>  #> $dn #> $dn$name #> [1] \"dn\" #>  #> $dn$sdata #> [1] 3.4 #>  #> $dn$scode #> [1] \"real dn;\" #>  #> $dn$block #> [1] \"data\" #>  #> $dn$position #> [1] \"start\" #>  #> $dn$pll_args #> [1] \"data real dn\" #>  #>  #> $dn_sigma #> $dn_sigma$name #> [1] \"dn_sigma\" #>  #> $dn_sigma$sdata #> [1] 0.5 #>  #> $dn_sigma$scode #> [1] \"real dn_sigma;\" #>  #> $dn_sigma$block #> [1] \"data\" #>  #> $dn_sigma$position #> [1] \"start\" #>  #> $dn_sigma$pll_args #> [1] \"data real dn_sigma\" #>  #>  #> $tp_lb #> $tp_lb$name #> [1] \"tp_lb\" #>  #> $tp_lb$sdata #> [1] 2 #>  #> $tp_lb$scode #> [1] \"real tp_lb;\" #>  #> $tp_lb$block #> [1] \"data\" #>  #> $tp_lb$position #> [1] \"start\" #>  #> $tp_lb$pll_args #> [1] \"data real tp_lb\" #>  #>  #> $tp_ub #> $tp_ub$name #> [1] \"tp_ub\" #>  #> $tp_ub$sdata #> [1] 10 #>  #> $tp_ub$scode #> [1] \"real tp_ub;\" #>  #> $tp_ub$block #> [1] \"data\" #>  #> $tp_ub$position #> [1] \"start\" #>  #> $tp_ub$pll_args #> [1] \"data real tp_ub\" #>  #>  #> $sigma_lb #> $sigma_lb$name #> [1] \"sigma_lb\" #>  #> $sigma_lb$sdata #> [1] 0 #>  #> $sigma_lb$scode #> [1] \"real sigma_lb;\" #>  #> $sigma_lb$block #> [1] \"data\" #>  #> $sigma_lb$position #> [1] \"start\" #>  #> $sigma_lb$pll_args #> [1] \"data real sigma_lb\" #>  #>  #> $sigma_ub #> $sigma_ub$name #> [1] \"sigma_ub\" #>  #> $sigma_ub$sdata #> [1] 10 #>  #> $sigma_ub$scode #> [1] \"real sigma_ub;\" #>  #> $sigma_ub$block #> [1] \"data\" #>  #> $sigma_ub$position #> [1] \"start\" #>  #> $sigma_ub$pll_args #> [1] \"data real sigma_ub\" #>  #>  #> attr(,\"class\") #> [1] \"stanvars\""},{"path":"https://benjaminhlina.github.io/trps/news/index.html","id":"trps-010","dir":"Changelog","previous_headings":"","what":"trps 0.1.0","title":"trps 0.1.0","text":"Active Development Progress one-source model priors one-source model parameters priors one-source model two-source model without different lambda priors two-source model without different lambda parameters priors two-source model without different lambda two-source model different lambda priors two-source model w/ different lambda (priors two-source) parameters priors two-source model w/ different lambda (priors two-source) [] two-source carbon fractionation model [] priors parameters priors [] two-source model different lambdas alpha corrected using Heuvel et al. 2024. [] priors parameters priors [] vignettes model type","code":""}]
